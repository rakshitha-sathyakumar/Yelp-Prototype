{"ast":null,"code":"import { ADD_DISH } from \"./types\";\nimport { GET_DISH } from \"./types\";\nimport { UPDATE_DISH } from \"./types\";\nimport axios from \"axios\";\nimport backendServer from \"../backendServer\";\naxios.defaults.headers.common['authorization'] = localStorage.getItem('token');\nexport const addDish = dishData => dispatch => {\n  axios.defaults.withCredentials = true;\n  axios.post(`${backendServer}/yelp/addDish`, dishData).then(response => dispatch({\n    type: ADD_DISH,\n    payload: response.data\n  })).catch(error => {\n    if (error.response && error.response.data) {\n      return dispatch({\n        type: ADD_DISH,\n        payload: error.response.data\n      });\n    }\n  });\n};\nexport const getDish = (restId, dishId) => dispatch => {\n  axios.defaults.withCredentials = true;\n  axios.get(`${backendServer}/yelp/editDish/${restId}/${dishId}`).then(response => dispatch({\n    type: GET_DISH,\n    payload: response.data\n  })).catch(error => {\n    if (error.response && error.response.data) {\n      return dispatch({\n        type: GET_DISH,\n        payload: error.response.data\n      });\n    }\n  });\n};\nexport const updateDish = dishData => dispatch => {\n  axios.defaults.withCredentials = true;\n  axios.post(`${backendServer}/yelp/editDish`, dishData).then(response => dispatch({\n    type: UPDATE_DISH,\n    payload: response.data\n  })).catch(error => {\n    if (error.response && error.response.data) {\n      return dispatch({\n        type: UPDATE_DISH,\n        payload: error.response.data\n      });\n    }\n  });\n}; //export const userLogout = () => dispatch => dispatch({type: USER_LOGOUT});","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/actions/dishAction.js"],"names":["ADD_DISH","GET_DISH","UPDATE_DISH","axios","backendServer","defaults","headers","common","localStorage","getItem","addDish","dishData","dispatch","withCredentials","post","then","response","type","payload","data","catch","error","getDish","restId","dishId","get","updateDish"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDC,YAAY,CAACC,OAAb,CAC7C,OAD6C,CAAjD;AAIA,OAAO,MAAMC,OAAO,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AAC7CT,EAAAA,KAAK,CAACE,QAAN,CAAeQ,eAAf,GAAiC,IAAjC;AACAV,EAAAA,KAAK,CAACW,IAAN,CAAY,GAAEV,aAAc,eAA5B,EAA2CO,QAA3C,EACKI,IADL,CACUC,QAAQ,IAAIJ,QAAQ,CAAC;AACvBK,IAAAA,IAAI,EAAEjB,QADiB;AAEvBkB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFK,GAAD,CAD9B,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZ,QAAIA,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAeG,IAArC,EAA2C;AACvC,aAAOP,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAEjB,QADM;AAEZkB,QAAAA,OAAO,EAAEG,KAAK,CAACL,QAAN,CAAeG;AAFZ,OAAD,CAAf;AAIH;AACJ,GAZL;AAaH,CAfM;AAiBP,OAAO,MAAMG,OAAO,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoBZ,QAAQ,IAAI;AACnDT,EAAAA,KAAK,CAACE,QAAN,CAAeQ,eAAf,GAAiC,IAAjC;AACAV,EAAAA,KAAK,CAACsB,GAAN,CAAW,GAAErB,aAAc,kBAAiBmB,MAAO,IAAGC,MAAO,EAA7D,EACCT,IADD,CACMC,QAAQ,IAAIJ,QAAQ,CAAC;AACvBK,IAAAA,IAAI,EAAEhB,QADiB;AAEvBiB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFK,GAAD,CAD1B,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZ,QAAIA,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAeG,IAArC,EAA2C;AACvC,aAAOP,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAEhB,QADM;AAEZiB,QAAAA,OAAO,EAAEG,KAAK,CAACL,QAAN,CAAeG;AAFZ,OAAD,CAAf;AAIH;AACJ,GAZD;AAcH,CAhBM;AAkBP,OAAO,MAAMO,UAAU,GAAIf,QAAD,IAAcC,QAAQ,IAAI;AAChDT,EAAAA,KAAK,CAACE,QAAN,CAAeQ,eAAf,GAAiC,IAAjC;AACAV,EAAAA,KAAK,CAACW,IAAN,CAAY,GAAEV,aAAc,gBAA5B,EAA4CO,QAA5C,EACCI,IADD,CACMC,QAAQ,IAAIJ,QAAQ,CAAC;AACvBK,IAAAA,IAAI,EAAEf,WADiB;AAEvBgB,IAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFK,GAAD,CAD1B,EAKCC,KALD,CAKOC,KAAK,IAAI;AACZ,QAAIA,KAAK,CAACL,QAAN,IAAkBK,KAAK,CAACL,QAAN,CAAeG,IAArC,EAA2C;AACvC,aAAOP,QAAQ,CAAC;AACZK,QAAAA,IAAI,EAAEf,WADM;AAEZgB,QAAAA,OAAO,EAAEG,KAAK,CAACL,QAAN,CAAeG;AAFZ,OAAD,CAAf;AAIH;AACJ,GAZD;AAcH,CAhBM,C,CAkBP","sourcesContent":["import { ADD_DISH } from \"./types\";\nimport { GET_DISH } from \"./types\";\nimport { UPDATE_DISH } from \"./types\";\nimport axios from \"axios\";\nimport backendServer from \"../backendServer\";\naxios.defaults.headers.common['authorization'] = localStorage.getItem(\n    'token',\n  );\n\nexport const addDish = (dishData) => dispatch => {\n    axios.defaults.withCredentials = true;\n    axios.post(`${backendServer}/yelp/addDish`,dishData)\n        .then(response => dispatch({\n            type: ADD_DISH,\n            payload: response.data\n        }))\n        .catch(error => {\n            if (error.response && error.response.data) {\n                return dispatch({\n                    type: ADD_DISH,\n                    payload: error.response.data\n                });\n            }\n        });\n}\n\nexport const getDish = (restId, dishId) => dispatch => {\n    axios.defaults.withCredentials = true;\n    axios.get(`${backendServer}/yelp/editDish/${restId}/${dishId}`)\n    .then(response => dispatch({\n        type: GET_DISH,\n        payload: response.data\n    }))\n    .catch(error => {\n        if (error.response && error.response.data) {\n            return dispatch({\n                type: GET_DISH,\n                payload: error.response.data\n            });\n        }\n    });\n\n}\n\nexport const updateDish = (dishData) => dispatch => {\n    axios.defaults.withCredentials = true;\n    axios.post(`${backendServer}/yelp/editDish`,dishData)\n    .then(response => dispatch({\n        type: UPDATE_DISH,\n        payload: response.data\n    }))\n    .catch(error => {\n        if (error.response && error.response.data) {\n            return dispatch({\n                type: UPDATE_DISH,\n                payload: error.response.data\n            });\n        }\n    });\n\n}\n\n//export const userLogout = () => dispatch => dispatch({type: USER_LOGOUT});"]},"metadata":{},"sourceType":"module"}