{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/viewDishList.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport { connect } from 'react-redux';\nimport { getAllMenuUser } from '../../actions/menuAction';\nimport { addOrder } from '../../actions/orderAction';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport PropTypes from 'prop-types';\nexport class getDish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.handleCheckboxChange = e => {\n      this.setState({\n        orderType: e.target.value\n      });\n      this.setState({\n        dishName: e.target.name\n      });\n      this.setState({\n        dish_id: e.target.id\n      });\n    };\n\n    this.onOrder = e => {\n      e.preventDefault();\n      var today = new Date();\n      var current_date = today.getMonth() + 1 + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n      var current_time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const data = {\n        user_id: localStorage.getItem(\"user_id\"),\n        rest_id: localStorage.getItem(\"rest_id\"),\n        rest_name: localStorage.getItem(\"rest_name\"),\n        dish_id: this.state.dish_id,\n        dish_name: this.state.dishName,\n        order_type: this.state.orderType,\n        first_name: localStorage.getItem(\"first_name\"),\n        last_name: localStorage.getItem(\"last_name\"),\n        date: current_date,\n        time: current_time\n      };\n      console.log(data);\n      this.props.addOrder(data); // return axios.post(`${backendServer}/yelp/order`,data)\n      // .then((response) => {\n      //     console.log(response.status)\n      //   if (response.status === 200) {\n      //     alert(\"Order Successful \")\n      //     window.location = `/user/orders`\n      //   }\n      // })\n      // .catch(function(error) {\n      //    alert(\"Error\")\n      // })\n    };\n\n    this.state = {\n      menuList: [],\n      offset: 0,\n      perPage: 3,\n      currentPage: 0,\n      pageCount: null\n    }; //this.changeHandler = this.changeHandler.bind(this);\n\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getAllMenuUser(); // axios.get(`${backendServer}/yelp/viewMenu/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     //console.log(res.data)\n    //     this.setState({ menuList: res.data });\n    //     // console.log(this.state.menuList);\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    this.setState({ ...this.state,\n      menuList: !nextProps.user ? this.state.menuList : nextProps.user,\n      pageCount: Math.ceil(this.state.menuList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.props.user);\n    console.log(this.state.menuList);\n    const count = this.state.menuList.length;\n    const slice = this.state.menuList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.menuList.length / this.state.perPage) > 0 ? Math.ceil(this.state.menuList.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    });\n    console.log(this.state.menuList);\n    let renderMenu;\n\n    if (this.state.menuList) {\n      renderMenu = slice.map(menu => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          class: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            marginLeft: \"25px\",\n            border: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          style: {\n            fontSize: \"25px\",\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }, menu.dishName, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 65\n          }\n        }, \"Category:\"), \" \", menu.category, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 64\n          }\n        }, \"Ingredients:\"), \" \", menu.ingredients), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 65\n          }\n        }, \"Description:\"), \" \", menu.description), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }\n        }, \" $\", menu.price), /*#__PURE__*/React.createElement(Form, {\n          onSubmit: this.onOrder,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          id: menu.dish_id,\n          name: menu.dishName,\n          label: \"Delivery\",\n          value: \"delivery\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          id: menu.dish_id,\n          name: menu.dishName,\n          label: \"Pickup\",\n          value: \"pickup\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          style: {\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            backgroundColor: \"red\",\n            border: \"1px solid red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }, \" Order now\")))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \" Full menu \")), renderMenu, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, paginationElement)));\n  }\n\n}\ngetDish.propTypes = {\n  getAllMenuUser: PropTypes.func.isRequired,\n  addOrder: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  status: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.getMenu.user,\n    status: state.orders.state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllMenuUser,\n  addOrder\n})(getDish); // export default getDish;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/viewDishList.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","connect","getAllMenuUser","addOrder","ReactPaginate","PropTypes","getDish","constructor","props","handlePageClick","e","alert","selectedPage","selected","offset","state","perPage","setState","currentPage","handleCheckboxChange","orderType","target","value","dishName","name","dish_id","id","onOrder","preventDefault","today","Date","current_date","getMonth","getDate","getFullYear","current_time","getHours","getMinutes","getSeconds","data","user_id","localStorage","getItem","rest_id","rest_name","dish_name","order_type","first_name","last_name","date","time","console","log","menuList","pageCount","bind","componentDidMount","componentWillReceiveProps","nextProps","user","Math","ceil","length","render","count","slice","paginationElement","renderMenu","map","menu","marginLeft","border","fontSize","fontWeight","category","ingredients","description","price","color","marginTop","backgroundColor","margin","propTypes","func","isRequired","object","status","mapStateToProps","getMenu","orders"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport { connect } from 'react-redux';\nimport { getAllMenuUser } from '../../actions/menuAction';\nimport { addOrder } from '../../actions/orderAction';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport PropTypes from 'prop-types';\n\nexport class getDish extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuList: [],\n            offset: 0,\n            perPage: 3,\n            currentPage: 0,\n            pageCount: null\n        };\n        //this.changeHandler = this.changeHandler.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getAllMenuUser();\n        // axios.get(`${backendServer}/yelp/viewMenu/${localStorage.getItem(\"rest_id\")}`)\n        // .then(res => {\n        //     //console.log(res.data)\n        //     this.setState({ menuList: res.data });\n        //     // console.log(this.state.menuList);\n        // });\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n\n    componentWillReceiveProps(nextProps){\n        console.log(nextProps)\n        this.setState({\n          ...this.state,\n          menuList : !nextProps.user ? this.state.menuList : nextProps.user,\n          pageCount: Math.ceil(this.state.menuList.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n\n    handleCheckboxChange = (e) => {\n        this.setState({\n            orderType: e.target.value\n        })\n        this.setState({\n            dishName: e.target.name\n        })\n        this.setState({\n          dish_id: e.target.id\n      })\n    }\n\n    onOrder = (e) => {\n        e.preventDefault();\n        var today = new Date();\n        var current_date = (today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getFullYear();\n        var current_time = (today.getHours() + \":\"+today.getMinutes()+\":\"+today.getSeconds());\n        const data = {\n            user_id: localStorage.getItem(\"user_id\"),\n            rest_id: localStorage.getItem(\"rest_id\"),\n            rest_name: localStorage.getItem(\"rest_name\"),\n            dish_id: this.state.dish_id,\n            dish_name: this.state.dishName,\n            order_type: this.state.orderType,\n            first_name: localStorage.getItem(\"first_name\"),\n            last_name: localStorage.getItem(\"last_name\"),\n            date: current_date,\n            time: current_time\n        }\n        console.log(data);\n        this.props.addOrder(data);\n        // return axios.post(`${backendServer}/yelp/order`,data)\n        // .then((response) => {\n        //     console.log(response.status)\n        //   if (response.status === 200) {\n        //     alert(\"Order Successful \")\n        //     window.location = `/user/orders`\n        //   }\n        // })\n        // .catch(function(error) {\n        //    alert(\"Error\")\n        // })\n      }\n    \n    render () {\n        console.log(this.props.user)\n        console.log(this.state.menuList);\n\n        const count = this.state.menuList.length;\n        const slice = this.state.menuList.slice(this.state.offset, this.state.offset + this.state.perPage);\n        \n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.menuList.length / this.state.perPage) > 0 ? Math.ceil(this.state.menuList.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n\n        console.log(this.state.menuList);\n        let renderMenu;\n        if(this.state.menuList) {\n        renderMenu = slice.map(menu => {\n            return (\n                <div class=\"container\">\n                    <Card style={{marginLeft: \"25px\", border: \"none\"}}>\n                        <Card.Title style={{fontSize: \"25px\", fontWeight: \"bold\", marginLeft:\"10px\"}}>{menu.dishName} </Card.Title>\n                        <hr />\n                        <Card.Text style={{marginLeft:\"10px\"}}> <span style={{fontWeight: \"bold\"}}>Category:</span> {menu.category} </Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}><span style={{fontWeight: \"bold\"}}>Ingredients:</span> {menu.ingredients}</Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}> <span style={{fontWeight: \"bold\"}}>Description:</span> {menu.description}</Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}> ${menu.price}</Card.Text>\n                        <Form onSubmit={this.onOrder}>\n                        <div>\n                        <Form.Check\n                            id = {menu.dish_id}\n                            name={menu.dishName}\n                            label='Delivery'\n                            value='delivery'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\", color: 'red' }}\n                        />\n                        <Form.Check\n                            id = {menu.dish_id}\n                            name={menu.dishName}\n                            label='Pickup'\n                            value='pickup'\n                            onChange={this.handleCheckboxChange}\n                            style={{ marginLeft:\"10px\", color: 'red' }}\n                        />\n                        <Button type='submit' style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}}> Order now</Button>\n                        </div>\n                        </Form>\n                        </Card>\n                    <br/>\n                    <hr />\n                </div>\n            )\n        })\n        }\n        return (\n            <React.Fragment>\n            <Navigationbar/>\n            <div class=\"container\">\n                <center>\n                <h1 style={{margin: \"10px\", color: \"red\"}}> Full menu </h1>\n                </center>\n                    {renderMenu}\n                <div>\n                    {paginationElement}\n                </div>\n            </div>\n        </React.Fragment>\n        )\n    }\n         \n}\n\ngetDish.propTypes = {\n    getAllMenuUser: PropTypes.func.isRequired,\n    addOrder: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    status: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => {\n    return ({\n    user: state.getMenu.user, \n    status: state.orders.state\n  })\n};\n\nexport default connect(mapStateToProps, { getAllMenuUser, addOrder})(getDish);\n// export default getDish;"]},"metadata":{},"sourceType":"module"}