{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getAppetizer.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport { getappetizer } from '../../../actions/menuAction';\nexport class getAppetizer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appetizerList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getappetizer();\n    console.log(this.props);\n    this.setState({\n      appetizerList: this.props.user\n    });\n    this.forceUpdate(); // console.log(this.props);\n    // axios.get(`${backendServer}/yelp/viewMenu/appetizer/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     console.log(res.data)\n    //     \n    //     //console.log(this.state.appetizerList);\n    // });\n  }\n\n  render() {\n    console.log(this.state.appetizerList); // let printAppetizer;\n    // if (this.state.appetizerList){\n    //     printAppetizer = this.state.appetizerList.map(menu => {\n    //         var fileName = menu.fileText\n    //         var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`\n    //         return (\n    //                 <div>\n    //                 <Card style={{borderLeft: \"none\", borderBottom: \"none\"}}>\n    //                     <Card.Img src = {imgSrc} style={{width: \"500px\", height: \"420px\"}}></Card.Img>\n    //                     <Card.Title style={{margin: \"10px\", fontSize: \"25px\"}}>{menu.dish_name} </Card.Title>\n    //                     <Card.Text style={{margin: \"10px\"}}>{menu.ingredients}</Card.Text>\n    //                     <Card.Text style={{margin: \"10px\"}}>{menu.description}</Card.Text>\n    //                     <Card.Text style={{margin: \"10px\"}}> ${menu.price}</Card.Text>\n    //                     <div>\n    //                     <Button style={{backgroundColor:\"red\", border: \"1px solid red\", marginLeft: \"10px\"}}>\n    //                     <Link to = {{pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`}} style={{color: \"white\"}}> Edit dish </Link></Button>\n    //                     </div>\n    //                 </Card>\n    //                 <br/>\n    //                 <br />\n    //                 </div>\n    //         )\n    //     })\n    // }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\",\n        fontSize: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \" Appetizers \"))));\n  }\n\n}\ngetAppetizer.propTypes = {\n  getappetizer: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.getMenu.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getappetizer\n})(getAppetizer); //export default getAppetizer;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getAppetizer.js"],"names":["React","Component","Navigationbar","PropTypes","Redirect","Link","connect","Form","Button","Card","CardGroup","axios","backendServer","getappetizer","getAppetizer","constructor","props","state","appetizerList","componentDidMount","console","log","setState","user","forceUpdate","render","margin","color","fontSize","propTypes","func","isRequired","object","mapStateToProps","getMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AACA,OAAO,+CAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,SAA7B,QAA6C,iBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAEA,OAAO,MAAMC,YAAN,SAA2Bb,SAA3B,CAAqC;AACxCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AADN,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWH,YAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,SAAKM,QAAL,CAAc;AAACJ,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWO;AAA3B,KAAd;AACA,SAAKC,WAAL,GAJgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,MAAM,GAAI;AACNL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,aAAvB,EADM,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAE;AAACQ,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE,KAAxB;AAA+BC,QAAAA,QAAQ,EAAE;AAAzC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADJ,CAFJ,CADJ;AAYH;;AA5DuC;AAiE5Cd,YAAY,CAACe,SAAb,GAAyB;AACrBhB,EAAAA,YAAY,EAAEV,SAAS,CAAC2B,IAAV,CAAeC,UADR;AAErBR,EAAAA,IAAI,EAAEpB,SAAS,CAAC6B,MAAV,CAAiBD;AAFF,CAAzB;;AAKE,MAAME,eAAe,GAAGhB,KAAK,IAAI;AAC/B,SAAQ;AACRM,IAAAA,IAAI,EAAEN,KAAK,CAACiB,OAAN,CAAcX;AADZ,GAAR;AAGH,CAJC;;AAMF,eAAejB,OAAO,CAAC2B,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,YAA3C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport { getappetizer } from '../../../actions/menuAction';\n\nexport class getAppetizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appetizerList: []\n        };\n    }\n\n    componentDidMount() {\n        this.props.getappetizer();\n        console.log(this.props);\n        this.setState({appetizerList: this.props.user});\n        this.forceUpdate();\n        // console.log(this.props);\n        // axios.get(`${backendServer}/yelp/viewMenu/appetizer/${localStorage.getItem(\"rest_id\")}`)\n        // .then(res => {\n        //     console.log(res.data)\n        //     \n        //     //console.log(this.state.appetizerList);\n        // });\n    }\n\n    render () {\n        console.log(this.state.appetizerList);\n        // let printAppetizer;\n        // if (this.state.appetizerList){\n        //     printAppetizer = this.state.appetizerList.map(menu => {\n        //         var fileName = menu.fileText\n        //         var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`\n        //         return (\n        //                 <div>\n        //                 <Card style={{borderLeft: \"none\", borderBottom: \"none\"}}>\n        //                     <Card.Img src = {imgSrc} style={{width: \"500px\", height: \"420px\"}}></Card.Img>\n        //                     <Card.Title style={{margin: \"10px\", fontSize: \"25px\"}}>{menu.dish_name} </Card.Title>\n        //                     <Card.Text style={{margin: \"10px\"}}>{menu.ingredients}</Card.Text>\n        //                     <Card.Text style={{margin: \"10px\"}}>{menu.description}</Card.Text>\n        //                     <Card.Text style={{margin: \"10px\"}}> ${menu.price}</Card.Text>\n        //                     <div>\n        //                     <Button style={{backgroundColor:\"red\", border: \"1px solid red\", marginLeft: \"10px\"}}>\n        //                     <Link to = {{pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`}} style={{color: \"white\"}}> Edit dish </Link></Button>\n        //                     </div>\n        //                 </Card>\n        //                 <br/>\n        //                 <br />\n        //                 </div>\n        //         )\n        //     })\n        // }\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                    <center>\n                    <h1 style={{margin: \"10px\", color: \"red\", fontSize: \"40px\"}}> Appetizers </h1>\n                    </center>\n                        {/* {renderAppetizer} */}\n                </div>\n            </React.Fragment>\n            \n        )\n    }\n         \n}\n\n\ngetAppetizer.propTypes = {\n    getappetizer: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => {\n    return ({\n    user: state.getMenu.user\n  })\n};\n\nexport default connect(mapStateToProps, { getappetizer })(getAppetizer);\n//export default getAppetizer;"]},"metadata":{},"sourceType":"module"}