{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/viewDishList.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport { connect } from 'react-redux';\nimport { getAllMenuUser } from '../../actions/menuAction';\nimport ReactPaginate from 'react-paginate';\nimport '../restuarant/pagination.css';\nimport PropTypes from 'prop-types';\nexport class getDish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.handleCheckboxChange = e => {\n      this.setState({\n        orderType: e.target.value\n      });\n      this.setState({\n        dishName: e.target.name\n      });\n      this.setState({\n        dish_id: e.target.id\n      });\n    };\n\n    this.onOrder = e => {\n      e.preventDefault();\n      var today = new Date();\n      var current_date = today.getMonth() + 1 + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n      var current_time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const data = {\n        user_id: localStorage.getItem(\"user_id\"),\n        rest_id: localStorage.getItem(\"rest_id\"),\n        rest_name: localStorage.getItem(\"rest_name\"),\n        dish_id: this.state.dish_id,\n        dish_name: this.state.dishName,\n        order_type: this.state.orderType,\n        first_name: localStorage.getItem(\"first_name\"),\n        last_name: localStorage.getItem(\"last_name\"),\n        date: current_date,\n        time: current_time\n      };\n      console.log(data);\n      return axios.post(`${backendServer}/yelp/order`, data).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n          alert(\"Order Successful \");\n          window.location = `/user/orders`;\n        }\n      }).catch(function (error) {\n        alert(\"Error\");\n      });\n    };\n\n    this.state = {\n      menuList: []\n    }; //this.changeHandler = this.changeHandler.bind(this);\n\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getAllMenuUser(); // axios.get(`${backendServer}/yelp/viewMenu/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     //console.log(res.data)\n    //     this.setState({ menuList: res.data });\n    //     // console.log(this.state.menuList);\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    this.setState({ ...this.state,\n      menuList: !nextProps.user ? this.state.menuList : nextProps.user,\n      pageCount: Math.ceil(this.state.menuList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.props.user);\n    console.log(this.state.menuList);\n    const count = this.state.menuList.length;\n    const slice = this.state.menuList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.menuList.length / this.state.perPage) > 0 ? Math.ceil(this.state.menuList.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    });\n    console.log(this.state.menuList);\n    let renderMenu = this.state.menuList.map(menu => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          marginLeft: \"25px\",\n          border: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        style: {\n          fontSize: \"25px\",\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, menu.dishName, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 65\n        }\n      }, \"Category:\"), \" \", menu.category, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 64\n        }\n      }, \"Ingredients:\"), \" \", menu.ingredients), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 65\n        }\n      }, \"Description:\"), \" \", menu.description), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, \" $\", menu.price), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onOrder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        id: menu.dish_id,\n        name: menu.dishName,\n        label: \"Delivery\",\n        value: \"delivery\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        id: menu.dish_id,\n        name: menu.dishName,\n        label: \"Pickup\",\n        value: \"pickup\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"10px\",\n          backgroundColor: \"red\",\n          border: \"1px solid red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \" Order now\")))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \" Full menu \")), renderMenu));\n  }\n\n}\ngetDish.propTypes = {\n  getAllMenuUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.getMenu.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllMenuUser\n})(getDish); // export default getDish;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/viewDishList.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","connect","getAllMenuUser","ReactPaginate","PropTypes","getDish","constructor","props","handlePageClick","e","alert","selectedPage","selected","offset","state","perPage","setState","currentPage","handleCheckboxChange","orderType","target","value","dishName","name","dish_id","id","onOrder","preventDefault","today","Date","current_date","getMonth","getDate","getFullYear","current_time","getHours","getMinutes","getSeconds","data","user_id","localStorage","getItem","rest_id","rest_name","dish_name","order_type","first_name","last_name","date","time","console","log","post","then","response","status","window","location","catch","error","menuList","bind","componentDidMount","componentWillReceiveProps","nextProps","user","pageCount","Math","ceil","length","render","count","slice","paginationElement","renderMenu","map","menu","marginLeft","border","fontSize","fontWeight","category","ingredients","description","price","color","marginTop","backgroundColor","margin","propTypes","func","isRequired","object","mapStateToProps","getMenu"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport { connect } from 'react-redux';\nimport { getAllMenuUser } from '../../actions/menuAction';\nimport ReactPaginate from 'react-paginate';\nimport '../restuarant/pagination.css';\nimport PropTypes from 'prop-types';\n\nexport class getDish extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuList: []\n        };\n        //this.changeHandler = this.changeHandler.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getAllMenuUser();\n        // axios.get(`${backendServer}/yelp/viewMenu/${localStorage.getItem(\"rest_id\")}`)\n        // .then(res => {\n        //     //console.log(res.data)\n        //     this.setState({ menuList: res.data });\n        //     // console.log(this.state.menuList);\n        // });\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n\n    componentWillReceiveProps(nextProps){\n        console.log(nextProps)\n        this.setState({\n          ...this.state,\n          menuList : !nextProps.user ? this.state.menuList : nextProps.user,\n          pageCount: Math.ceil(this.state.menuList.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n\n    handleCheckboxChange = (e) => {\n        this.setState({\n            orderType: e.target.value\n        })\n        this.setState({\n            dishName: e.target.name\n        })\n        this.setState({\n          dish_id: e.target.id\n      })\n    }\n\n    onOrder = (e) => {\n        e.preventDefault();\n        var today = new Date();\n        var current_date = (today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getFullYear();\n        var current_time = (today.getHours() + \":\"+today.getMinutes()+\":\"+today.getSeconds());\n        const data = {\n            user_id: localStorage.getItem(\"user_id\"),\n            rest_id: localStorage.getItem(\"rest_id\"),\n            rest_name: localStorage.getItem(\"rest_name\"),\n            dish_id: this.state.dish_id,\n            dish_name: this.state.dishName,\n            order_type: this.state.orderType,\n            first_name: localStorage.getItem(\"first_name\"),\n            last_name: localStorage.getItem(\"last_name\"),\n            date: current_date,\n            time: current_time\n        }\n        console.log(data);\n        return axios.post(`${backendServer}/yelp/order`,data)\n        .then((response) => {\n            console.log(response.status)\n          if (response.status === 200) {\n            alert(\"Order Successful \")\n            window.location = `/user/orders`\n          }\n        })\n        .catch(function(error) {\n           alert(\"Error\")\n        })\n      }\n    \n    render () {\n        console.log(this.props.user)\n        console.log(this.state.menuList);\n\n        const count = this.state.menuList.length;\n        const slice = this.state.menuList.slice(this.state.offset, this.state.offset + this.state.perPage);\n        \n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.menuList.length / this.state.perPage) > 0 ? Math.ceil(this.state.menuList.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n\n        console.log(this.state.menuList);\n        let renderMenu = this.state.menuList.map(menu => {\n            return (\n                <div class=\"container\">\n                    <Card style={{marginLeft: \"25px\", border: \"none\"}}>\n                        <Card.Title style={{fontSize: \"25px\", fontWeight: \"bold\", marginLeft:\"10px\"}}>{menu.dishName} </Card.Title>\n                        <hr />\n                        <Card.Text style={{marginLeft:\"10px\"}}> <span style={{fontWeight: \"bold\"}}>Category:</span> {menu.category} </Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}><span style={{fontWeight: \"bold\"}}>Ingredients:</span> {menu.ingredients}</Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}> <span style={{fontWeight: \"bold\"}}>Description:</span> {menu.description}</Card.Text>\n                        <Card.Text style={{marginLeft:\"10px\"}}> ${menu.price}</Card.Text>\n                        <Form onSubmit={this.onOrder}>\n                        <div>\n                        <Form.Check\n                            id = {menu.dish_id}\n                            name={menu.dishName}\n                            label='Delivery'\n                            value='delivery'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\", color: 'red' }}\n                        />\n                        <Form.Check\n                            id = {menu.dish_id}\n                            name={menu.dishName}\n                            label='Pickup'\n                            value='pickup'\n                            onChange={this.handleCheckboxChange}\n                            style={{ marginLeft:\"10px\", color: 'red' }}\n                        />\n                        <Button type='submit' style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}}> Order now</Button>\n                        </div>\n                        </Form>\n                        </Card>\n                    <br/>\n                    <hr />\n                </div>\n            )\n        })\n        return (\n            <React.Fragment>\n            <Navigationbar/>\n            <div class=\"container\">\n                <center>\n                <h1 style={{margin: \"10px\", color: \"red\"}}> Full menu </h1>\n                </center>\n                    {renderMenu}\n            </div>\n        </React.Fragment>\n        )\n    }\n         \n}\n\ngetDish.propTypes = {\n    getAllMenuUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => {\n    return ({\n    user: state.getMenu.user\n  })\n};\n\nexport default connect(mapStateToProps, { getAllMenuUser })(getDish);\n// export default getDish;"]},"metadata":{},"sourceType":"module"}