{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/userOrders.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport { getUserOrder } from '../../actions/orderAction'; // import { getMainCourse } from './getMaincourse';\n\nexport class userOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = e => {\n      e.preventDefault();\n      let order_status = e.target.id;\n      let filteredData = this.state.userOrders.filter(order => order.order_status == order_status);\n      console.log(filteredData);\n      this.setState({\n        tempUserOrders: filteredData\n      });\n    };\n\n    this.handleCancel = e => {\n      e.preventDefault();\n      const data = {\n        order_id: e.target.id,\n        order_status: e.target.name\n      };\n      return axios.post(`${backendServer}/yelp/order/update`, data).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n          alert(\"Order cancelled\");\n          window.location = `/user/orders`;\n        }\n      }).catch(function (error) {\n        alert(\"Error\");\n      });\n    };\n\n    this.handleReset = e => {\n      e.preventDefault();\n      let allOrders = this.state.userOrders;\n      this.setState({\n        tempUserOrders: allOrders\n      });\n    };\n\n    this.handlePageClick = e => {\n      // alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.state = {\n      userOrders: [],\n      tempUserOrders: [],\n      offset: 0,\n      perPage: 2,\n      currentPage: 0,\n      pageCount: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserOrder(); // axios.get(`${backendServer}/yelp/order/${localStorage.getItem(\"user_id\")}`)\n    // .then(res => {\n    //     this.setState({ userOrders: res.data, tempUserOrders: res.data });\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      userOrders: !nextProps.user ? this.state.userOrders : nextProps.user,\n      tempUserOrders: !nextProps.user ? this.state.tempUserOrders : nextProps.user,\n      pageCount: Math.ceil(this.state.tempUserOrders.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.state.tempUserOrders);\n    const count = this.state.tempUserOrders.length;\n    const slice = this.state.tempUserOrders.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.tempUserOrders.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempUserOrders.length / this.state.perPage) : 1,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    });\n    let renderOrders;\n\n    if (this.state.tempUserOrders) {\n      // console.log(this.state.yourOrders);\n      renderOrders = slice.map(order => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            border: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          style: {\n            marginLeft: \"10px\",\n            fontSize: \"25px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, order.dishName, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }\n        }, \"Restuarant:\"), \" \", order.restName), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }\n        }, \"Order type:\"), \" \", order.orderType), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 37\n          }\n        }, \" Order date \"), \" \", order.date), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }\n        }, \" Order time \"), \" \", order.time), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }\n        }, \"Order status:\"), \" \", order.orderStatus, \" \"), /*#__PURE__*/React.createElement(Button, {\n          style: {\n            backgroundColor: \"red\",\n            border: \"1px solid red\",\n            marginLeft: \"10px\"\n          },\n          id: order._id,\n          name: \" Cancelled\",\n          onClick: this.handleCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }\n        }, \" Cancel Order \")), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, \" Your orders \")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }), renderOrders), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 24\n      }\n    }, \" Filter \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" Order received\",\n      label: \"Order received\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" Preparing\",\n      label: \"Preparing\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" Pickup ready\",\n      label: \"Pickup ready\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" On the way\",\n      label: \"On the way\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" Picked up\",\n      label: \"Picked up\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \" Delivered\",\n      label: \"Delivered\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"red\",\n        border: \"1px solid red\"\n      },\n      type: \"submit\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }, \" Remove filters \"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '750px',\n        paddingLeft: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, paginationElement)));\n  }\n\n}\nuserOrders.propTypes = {\n  getUserOrder: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.orders.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserOrder\n})(userOrders); //export default userOrders;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/userOrders.js"],"names":["React","Component","Navigationbar","Link","Form","Button","Card","CardGroup","axios","backendServer","ReactPaginate","getUserOrder","userOrders","constructor","props","handleCheckboxChange","e","preventDefault","order_status","target","id","filteredData","state","filter","order","console","log","setState","tempUserOrders","handleCancel","data","order_id","name","post","then","response","status","alert","window","location","catch","error","handleReset","allOrders","handlePageClick","selectedPage","selected","offset","perPage","currentPage","pageCount","componentDidMount","componentWillReceiveProps","nextProps","user","Math","ceil","length","render","count","slice","paginationElement","renderOrders","map","border","marginLeft","fontSize","dishName","fontWeight","restName","orderType","date","time","orderStatus","backgroundColor","_id","float","margin","color","handleFilter","marginTop","paddingTop","paddingLeft","propTypes","PropTypes","func","isRequired","object","mapStateToProps","orders","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport { getUserOrder } from '../../actions/orderAction';\n// import { getMainCourse } from './getMaincourse';\n\nexport class userOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userOrders: [],\n            tempUserOrders: [],\n            offset: 0,\n            perPage: 2,\n            currentPage: 0,\n            pageCount: null\n        };\n    }\n\n    componentDidMount() {\n        this.props.getUserOrder();\n        // axios.get(`${backendServer}/yelp/order/${localStorage.getItem(\"user_id\")}`)\n        // .then(res => {\n        //     this.setState({ userOrders: res.data, tempUserOrders: res.data });\n        // });\n    }\n\n    handleCheckboxChange = (e) => {\n        e.preventDefault();\n        let order_status = e.target.id;\n        let filteredData = this.state.userOrders.filter(order =>\n            order.order_status == order_status\n        );\n        console.log(filteredData);\n        this.setState({tempUserOrders:filteredData});\n    }\n\n    handleCancel = (e) => {\n        e.preventDefault();\n       const data = {\n           order_id: e.target.id,\n           order_status: e.target.name\n       }\n       return axios.post(`${backendServer}/yelp/order/update`,data)\n        .then((response) => {\n            console.log(response.status)\n          if (response.status === 200) {\n            alert(\"Order cancelled\")\n           window.location = `/user/orders`\n          }\n        })\n        .catch(function(error) {\n           alert(\"Error\")\n        })\n    }\n\n      handleReset = (e) => {\n          e.preventDefault();\n          let allOrders = this.state.userOrders;\n          this.setState({tempUserOrders: allOrders})\n      }\n\n      handlePageClick = e => {\n        // alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n          ...this.state,\n          userOrders : !nextProps.user ? this.state.userOrders : nextProps.user,\n          tempUserOrders: !nextProps.user ? this.state.tempUserOrders : nextProps.user,\n          pageCount: Math.ceil(this.state.tempUserOrders.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n    render () {\n        console.log(this.state.tempUserOrders);\n\n        const count = this.state.tempUserOrders.length;\n        const slice = this.state.tempUserOrders.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.tempUserOrders.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempUserOrders.length / this.state.perPage) : 1}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n          let renderOrders;\n          if(this.state.tempUserOrders) {\n        // console.log(this.state.yourOrders);\n        renderOrders = slice.map(order => {\n            return (\n                <div>\n                    <Card style={{border: \"none\"}}>\n                        <Card.Title style={{marginLeft:\"10px\", fontSize: \"25px\"}}>{order.dishName} </Card.Title>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Restuarant:</span> {order.restName}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order type:</span> {order.orderType}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}> Order date </span> {order.date}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}> Order time </span> {order.time}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order status:</span> {order.orderStatus} </Card.Text>\n                        <Button style={{backgroundColor: \"red\", border:\"1px solid red\", marginLeft:\"10px\"}} id={order._id} name=' Cancelled' onClick={this.handleCancel}> Cancel Order </Button>\n                    </Card>\n                    <hr />\n                    <br/>\n                    <br/>\n                </div>\n            )\n        })\n    }\n        \n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                <div style={{float: \"left\"}}>\n                    <center>\n                    <h1 style={{margin: \"10px\", color:\"red\"}}> Your orders </h1>\n                    </center>\n                    <hr />\n                    {renderOrders}\n                </div>\n                    <div style={{float: \"right\"}}>\n                       <h4 style={{margin: \"10px\", color:\"red\"}}> Filter </h4> \n                       <hr />\n                       <Form onSubmit={this.handleFilter}>\n                       <Form.Check\n                            id = ' Order received'\n                            label='Order received'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = ' Preparing'\n                            label='Preparing'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = ' Pickup ready'\n                            label='Pickup ready'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = ' On the way'\n                            label='On the way'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = ' Picked up'\n                            label='Picked up'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = \" Delivered\"\n                            label='Delivered'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Button style={{marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\" }} type=\"submit\" onClick={this.handleReset}> Remove filters </Button>\n                        </Form>\n                    </div>\n                    <div style={{paddingTop:'750px', paddingLeft: \"400px\"}}>\n                        {paginationElement}\n                    </div>\n                       \n                </div>\n                \n            </React.Fragment>\n        )\n    }\n         \n}\n\nuserOrders.propTypes = {\n    getUserOrder: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired \n  }\n  \n  const mapStateToProps = state => { \n      return ({\n      user: state.orders.user\n  })};\n  \n  export default connect(mapStateToProps, {getUserOrder })(userOrders);\n//export default userOrders;"]},"metadata":{},"sourceType":"module"}