{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restOrders.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup, Modal } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\nimport { getRestOrder, updateOrderStatus, sendMessage } from '../../actions/orderAction';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nexport class restOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = e => {\n      e.preventDefault();\n      this.setState({\n        orderStatus: e.target.value\n      });\n      this.setState({\n        order_id: e.target.id\n      });\n    };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      let orders = e.target.id;\n      let filteredData = this.state.restOrders.filter(order => order.finalOrderStatus == orders);\n      console.log(filteredData);\n      this.setState({\n        tempRestOrder: filteredData\n      });\n    };\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.handleOpenModal = e => {\n      const filteredData = this.state.restOrders.filter(each => each._id === e.target.value);\n      this.setState({\n        showModal: true,\n        chatData: filteredData[0].message,\n        orderId: e.target.value\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.onUpdate = e => {\n      e.preventDefault();\n      const data = {\n        order_id: this.state.order_id,\n        order_status: this.state.orderStatus\n      };\n      console.log(data);\n      this.props.updateOrderStatus(data);\n    };\n\n    this.handleReset = e => {\n      console.log(\"handle reset\");\n      e.preventDefault();\n      let allOrders = this.state.restOrders;\n      console.log(allOrders);\n      this.setState({\n        tempRestOrder: allOrders\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleSendMessage = e => {\n      e.preventDefault();\n      console.log(this.state.message);\n      var today = new Date();\n      var current_date = today.getMonth() + 1 + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n      var current_time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const data = {\n        orderId: this.state.orderId,\n        message: this.state.message,\n        date: current_date,\n        time: current_time,\n        owner: localStorage.getItem(\"rest_name\")\n      };\n      console.log(data);\n      this.props.sendMessage(data); // axios.post(`${backendServer}/yelp/messages/initiate`, data)\n      // .then(response => {\n      //     if(response.status === 200) {\n      //         alert(\"Reply successfully sent\")\n      //     }\n      // })\n    };\n\n    this.state = {\n      restOrders: [],\n      tempRestOrder: [],\n      showModal: false,\n      orderId: '',\n      chatData: [],\n      message: '',\n      offset: 0,\n      perPage: 1,\n      currentPage: 0,\n      pageCount: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getRestOrder();\n    console.log(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      restOrders: !nextProps.user ? this.state.restOrders : nextProps.user,\n      tempRestOrder: !nextProps.user ? this.state.tempRestOrder : nextProps.user,\n      pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state.tempRestOrder);\n    const count = this.state.tempRestOrder.length;\n    const slice = this.state.tempRestOrder.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestOrder.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    });\n    let renderChat;\n\n    if (this.state.chatData.length >= 1) {\n      renderChat = this.state.chatData.map(chat => {\n        if (chat.firstName) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              marginBottom: \"0px\",\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }\n          }, \" \", chat.message, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              marginBottom: \"0px\",\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }\n          }, \" \", chat.owner, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }\n          }, \" \", chat.date, \" \", chat.time, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              marginBottom: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }\n          }, \" \", chat.message, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              marginBottom: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }\n          }, \" \", chat.owner, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }\n          }, \" \", chat.date, \" \", chat.time, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }\n          }));\n        }\n      });\n    }\n\n    let renderOrders;\n\n    if (this.state.tempRestOrder) {\n      renderOrders = slice.map((order, key) => {\n        let button1;\n        let button2;\n        let chatButton;\n\n        if (order.orderType === 'pickup') {\n          button1 = /*#__PURE__*/React.createElement(Form.Check, {\n            id: order._id,\n            name: order.dishName,\n            label: \"Pickup ready\",\n            value: \"Pickup ready\",\n            onChange: this.handleCheckboxChange,\n            style: {\n              marginLeft: \"10px\",\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 27\n            }\n          });\n          button2 = /*#__PURE__*/React.createElement(Form.Check, {\n            id: order._id,\n            name: order.dishName,\n            label: \"Picked up\",\n            value: \"Picked up\",\n            onChange: this.handleCheckboxChange,\n            style: {\n              marginLeft: \"10px\",\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 27\n            }\n          });\n        } else {\n          button1 = /*#__PURE__*/React.createElement(Form.Check, {\n            id: order._id,\n            name: order.dishName,\n            label: \"On the way\",\n            value: \"On the way\",\n            onChange: this.handleCheckboxChange,\n            style: {\n              marginLeft: \"10px\",\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 27\n            }\n          });\n          button2 = /*#__PURE__*/React.createElement(Form.Check, {\n            id: order._id,\n            name: order.dishName,\n            label: \"Delivered\",\n            value: \"Delivered\",\n            onChange: this.handleCheckboxChange,\n            style: {\n              marginLeft: \"10px\",\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 27\n            }\n          });\n        }\n\n        if (order.message.length >= 1) {\n          chatButton = /*#__PURE__*/React.createElement(Button, {\n            value: order._id,\n            style: {\n              marginLeft: \"10px\",\n              marginTop: \"10px\",\n              backgroundColor: \"red\",\n              border: \"1px solid red\"\n            },\n            onClick: this.handleOpenModal,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 30\n            }\n          }, \" Chat \");\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            border: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          style: {\n            marginLeft: \"10px\",\n            fontSize: \"25px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }\n        }, order.dishName, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 36\n          }\n        }, \" Customer: \"), /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/userProfile/${order.userId}`,\n            state: {\n              orderId: order._id\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }\n        }, \" \", order.firstName, \" \", order.lastName, \" \"), \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 37\n          }\n        }, \"Order type:\"), \" \", order.orderType), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 37\n          }\n        }, \"Order Status:\"), \" \", order.orderStatus), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        }, \"Orders:\"), \" \", order.finalOrderStatus, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Form, {\n          onSubmit: this.onUpdate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"Order received\",\n          value: \"Order received\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"Preparing\",\n          value: \"Preparing\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }\n        }), button1, button2, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            backgroundColor: \"red\",\n            border: \"1px solid red\"\n          },\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }\n        }, \"Update order status \"), chatButton, /*#__PURE__*/React.createElement(Modal, {\n          show: this.state.showModal,\n          onHide: this.handleCloseModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Modal.Header, {\n          closeButton: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Modal.Title, {\n          style: {\n            fontSize: \"30px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 45\n          }\n        }, \" Your conversation \")), /*#__PURE__*/React.createElement(Modal.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 41\n          }\n        }, renderChat, /*#__PURE__*/React.createElement(\"input\", {\n          class: \"form-control input-md\",\n          type: \"text\",\n          style: {\n            height: '70px'\n          },\n          onChange: this.handleInputChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 45\n          }\n        })), /*#__PURE__*/React.createElement(Modal.Footer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            border: \"1px solid red\",\n            backgroundColor: \"red\",\n            color: 'white',\n            width: \"100px\",\n            borderRadius: '5px'\n          },\n          onClick: this.handleSendMessage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 45\n          }\n        }, \"Reply\")))))), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 21\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        marginLeft: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, \" Your orders \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }), renderOrders), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 24\n      }\n    }, \" Filter \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"New order\",\n      label: \"New Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Delivered order\",\n      label: \"Delivered Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Cancelled order\",\n      label: \"Cancelled Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"red\",\n        border: \"1px solid red\"\n      },\n      type: \"submit\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, \" Remove filter \"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: \"500px\",\n        paddingLeft: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }\n    }, paginationElement)));\n  }\n\n}\nrestOrders.propTypes = {\n  getRestOrder: PropTypes.func.isRequired,\n  updateOrderStatus: PropTypes.func.isRequired,\n  sendMessage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  status: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.orders.user,\n    status: state.orders.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getRestOrder,\n  updateOrderStatus,\n  sendMessage\n})(restOrders);","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restOrders.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","Modal","axios","backendServer","ReactPaginate","getRestOrder","updateOrderStatus","sendMessage","PropTypes","connect","restOrders","constructor","props","handleCheckboxChange","e","preventDefault","setState","orderStatus","target","value","order_id","id","handleFilter","orders","filteredData","state","filter","order","finalOrderStatus","console","log","tempRestOrder","handlePageClick","alert","selectedPage","selected","offset","perPage","currentPage","handleOpenModal","each","_id","showModal","chatData","message","orderId","handleCloseModal","onUpdate","data","order_status","handleReset","allOrders","handleInputChange","handleSendMessage","today","Date","current_date","getMonth","getDate","getFullYear","current_time","getHours","getMinutes","getSeconds","date","time","owner","localStorage","getItem","pageCount","componentDidMount","componentWillReceiveProps","nextProps","user","Math","ceil","length","render","count","slice","paginationElement","renderChat","map","chat","firstName","marginBottom","float","renderOrders","key","button1","button2","chatButton","orderType","dishName","marginLeft","color","marginTop","backgroundColor","border","fontSize","fontWeight","pathname","userId","lastName","height","width","borderRadius","margin","paddingTop","paddingLeft","propTypes","func","isRequired","object","status","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup, Modal} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\nimport { getRestOrder, updateOrderStatus, sendMessage } from '../../actions/orderAction'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class restOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restOrders: [],\n            tempRestOrder: [],\n            showModal: false,\n            orderId: '',\n            chatData: [],\n            message: '',\n            offset: 0,\n            perPage: 1,\n            currentPage: 0,\n            pageCount: null\n        };\n    }\n\n\n    componentDidMount() {\n        this.props.getRestOrder();\n        console.log(this.props);\n    }\n\n\n    handleCheckboxChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            orderStatus: e.target.value\n        })\n        this.setState ({\n            order_id: e.target.id\n        })\n    }\n\n\n    handleFilter = (e) => {\n        e.preventDefault();\n        let orders = e.target.id;\n        let filteredData = this.state.restOrders.filter(order =>\n            order.finalOrderStatus == orders\n        );\n        console.log(filteredData);\n        this.setState({tempRestOrder:filteredData});\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n          ...this.state,\n          restOrders : !nextProps.user ? this.state.restOrders : nextProps.user,\n          tempRestOrder: !nextProps.user ? this.state.tempRestOrder : nextProps.user,\n          pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n      handleOpenModal = (e) => {\n        const filteredData = this.state.restOrders.filter(each => each._id === e.target.value)\n        this.setState({ showModal: true, chatData: filteredData[0].message, orderId: e.target.value});\n        \n      }\n\n      handleCloseModal = () => {\n        this.setState({ showModal: false });\n      }\n\n\n    onUpdate = (e) => {\n        e.preventDefault();\n        const data = {\n            order_id: this.state.order_id,\n            order_status: this.state.orderStatus,\n        }\n        console.log(data);\n        this.props.updateOrderStatus(data);\n      }\n\n      handleReset = (e) => {\n        console.log(\"handle reset\")\n          e.preventDefault();\n          let allOrders = this.state.restOrders;\n          console.log(allOrders)\n          this.setState({tempRestOrder: allOrders})\n      }\n    \n      handleInputChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n      handleSendMessage = (e) => {\n        e.preventDefault();\n        console.log(this.state.message)\n        var today = new Date();\n        var current_date = ((today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getFullYear());\n        var current_time = (today.getHours() + \":\"+today.getMinutes()+\":\"+today.getSeconds());\n        const data = {\n            orderId: this.state.orderId,\n            message: this.state.message,\n            date: current_date,\n            time: current_time,\n            owner: localStorage.getItem(\"rest_name\")\n        }\n        console.log(data);\n        this.props.sendMessage(data);\n        // axios.post(`${backendServer}/yelp/messages/initiate`, data)\n        // .then(response => {\n        //     if(response.status === 200) {\n        //         alert(\"Reply successfully sent\")\n        //     }\n        // })\n    }\n\n      \n\n    render () {\n        console.log(this.props);\n        console.log(this.state.tempRestOrder);\n\n        const count = this.state.tempRestOrder.length;\n        const slice = this.state.tempRestOrder.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.tempRestOrder.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestOrder.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n\n          let renderChat;\n        if(this.state.chatData.length >= 1) {\n            renderChat = this.state.chatData.map(chat => {\n                if(chat.firstName) {\n                return (\n                    <div>\n                        <p style={{marginBottom:\"0px\", float:\"right\"}}> {chat.message} </p>\n                        <br />\n                        <p class=\"text-muted\" style={{marginBottom:\"0px\", float:\"right\"}}> {chat.owner} </p>\n                        <br />\n                        <p class=\"text-muted\" style={{float:\"right\"}}> {chat.date} {chat.time} </p>\n                        <br />\n                        <br />\n                        <br />\n                    </div>\n                )\n                } else {\n                    return (\n                        <div>\n                            <p style={{marginBottom:\"0px\"}}> {chat.message} </p>\n                            <p class=\"text-muted\" style ={{marginBottom:\"0px\"}}> {chat.owner} </p>\n                            <p class=\"text-muted\"> {chat.date} {chat.time} </p>\n                            <br />\n                        </div>\n                    )\n                }\n            })\n        }\n\n          let renderOrders;\n          if(this.state.tempRestOrder) {\n            renderOrders = slice.map((order,key) => {\n            let button1;\n            let button2;\n            let chatButton;\n            if(order.orderType === 'pickup'){\n                button1 = <Form.Check id = {order._id} name={order.dishName} label='Pickup ready' \n                            value='Pickup ready' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order._id} name={order.dishName} label='Picked up' \n                    value='Picked up' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            } else {\n                button1 = <Form.Check id = {order._id} name={order.dishName} label='On the way' \n                            value='On the way' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order._id} name={order.dishName} label='Delivered' \n                    value='Delivered' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            }\n            if(order.message.length >= 1) {\n                chatButton = <Button value={order._id} style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}} onClick={this.handleOpenModal}> Chat </Button>\n            }\n            return (\n                <div>\n                    <Card style={{border: \"none\"}}>\n                        <Card.Title style={{marginLeft:\"10px\", fontSize: \"25px\"}}>{order.dishName} </Card.Title>\n                        <Card.Text><span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}> Customer: </span>\n                            <Link to = {{pathname: `/userProfile/${order.userId}`, state:{orderId: order._id}}}> {order.firstName} {order.lastName} </Link> </Card.Text>\n                        {/* <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Restuarant:</span> {order.rest_name}</Card.Text> */}\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order type:</span> {order.orderType}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order Status:</span> {order.orderStatus}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Orders:</span> {order.finalOrderStatus} </Card.Text>\n                        <hr />\n                        <Form onSubmit={this.onUpdate}>\n                            <Form.Check\n                                id = {order._id}\n                                name={order.dishName}\n                                label='Order received'\n                                value='Order received'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            <Form.Check\n                                id = {order._id}\n                                name={order.dishName}\n                                label='Preparing'\n                                value='Preparing'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            {button1}\n                            {button2}\n                            \n                            <div>\n                                <Button style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}} type=\"submit\"> \n                                    Update order status </Button>\n                                    {chatButton}\n                                    <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\n                                        <Modal.Header closeButton>\n                                            <Modal.Title style={{fontSize: \"30px\"}}> Your conversation </Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                            {renderChat}\n                                            <input class=\"form-control input-md\" type='text' style={{ height: '70px'}} onChange={this.handleInputChange}/>\n                                        </Modal.Body>\n                                        <Modal.Footer>\n                                            <Button style={{border: \"1px solid red\", backgroundColor: \"red\", color: 'white',  width: \"100px\", borderRadius: '5px'}} onClick = {this.handleSendMessage}>Reply</Button>\n                                        </Modal.Footer>\n                                    </Modal>\n                            </div>\n                        </Form>\n                    </Card>\n                    <hr />\n                    <br/>\n                    <br/>\n                </div>\n            )\n        })\n    }\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                    <div style={{float: \"left\"}}>\n                    <h1 style={{marginLeft: \"10px\", color:\"red\"}}> Your orders </h1>\n                    <hr />\n                        {renderOrders}\n                    </div>\n                    <div style={{float: \"right\"}}>\n                       <h4 style={{margin: \"10px\", color:\"red\"}}> Filter </h4> \n                       <hr />\n                       <Form>\n                       <Form.Check\n                            id = 'New order'\n                            label='New Order'\n                            onChange={this.handleFilter\n                            }\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Delivered order'\n                            label='Delivered Order'\n                            onChange={this.handleFilter}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Cancelled order'\n                            label='Cancelled Order'\n                            onChange={this.handleFilter}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Button style={{marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\" }} type=\"submit\" onClick={this.handleReset}> Remove filter </Button>\n                        </Form>\n                    </div>\n                    <div style = {{paddingTop: \"500px\", paddingLeft: \"40%\"}}>\n                {paginationElement}\n                </div>\n\n                </div>\n                \n            </React.Fragment>\n        )\n    }\n         \n}\n\nrestOrders.propTypes = {\n    getRestOrder: PropTypes.func.isRequired,\n    updateOrderStatus: PropTypes.func.isRequired,\n    sendMessage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    status: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => { \n    return ({\n    user: state.orders.user,\n    status: state.orders.status\n})};\n\nexport default connect(mapStateToProps, { getRestOrder, updateOrderStatus, sendMessage })(restOrders);"]},"metadata":{},"sourceType":"module"}