{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/eventList.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport illusionsImage from '../images/illusions.jpg';\nimport { Button, Card, CardGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\nimport { getRestEvents } from '../../actions/eventAction';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass viewEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = e => {\n      console.log(e);\n      localStorage.setItem(\"event_name\", e.target.id);\n      window.location();\n    };\n\n    this.handlePageClick = e => {\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.state = {\n      eventList: [],\n      offset: 0,\n      perPage: 2,\n      currentPage: 0,\n      pageCount: null\n    };\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getRestEvents(); // axios.get(`${backendServer}/yelp/viewEvents/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     //console.log(res.data)\n    //     this.setState({ eventList: res.data });\n    //     //console.log(this.state.appetizerList);\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      eventList: !nextProps.event ? this.props.event : nextProps.event,\n      pageCount: Math.ceil(this.state.eventList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.props);\n    const count = this.props.event.length;\n    const slice = this.state.eventList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.eventList.length / this.state.perPage) > 0 ? Math.ceil(this.state.eventList.length / this.state.perPage) : 1,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n    let renderEvents;\n\n    if (this.state.eventList) {\n      renderEvents = slice.map((event, key) => {\n        return (\n          /*#__PURE__*/\n          // <div class='col-md-6'>\n          React.createElement(Card, {\n            style: {\n              margin: \"10px\",\n              border: \"1px solid black\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Card.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Card.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }\n          }, event.eventName), /*#__PURE__*/React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }\n          }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fas fa-hourglass-half\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }\n          }), \" \", event.date, \" \", event.time), /*#__PURE__*/React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }\n          }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n            class: \"fas fa-map-marker-alt\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 41\n            }\n          }), \" \", event.eventLocation, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, event.eventDescription)), /*#__PURE__*/React.createElement(Card.Footer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: {\n              pathname: `/regUser/${event._id}`\n            },\n            style: {\n              color: \"red\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }\n          }, \" Registered people \"))) //  </div>\n\n        );\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        marginTop: \"25px\",\n        float: \"left\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \" Add an event \"), /*#__PURE__*/React.createElement(Button, {\n      href: \"/addEvent\",\n      style: {\n        marginTop: \"15px\",\n        float: \"right\",\n        backgroundColor: \"red\",\n        border: \"1px solid red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \" Create an event \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 154\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 159\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Events\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, renderEvents))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"center\", {\n      style: {\n        paddingLeft: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, paginationElement));\n  }\n\n}\n\nviewEvents.propTypes = {\n  getRestEvents: PropTypes.func.isRequired,\n  event: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  event: state.events.event\n});\n\nexport default connect(mapStateToProps, {\n  getRestEvents\n})(viewEvents); //export default viewEvents;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/eventList.js"],"names":["React","Component","Navigationbar","illusionsImage","Button","Card","CardGroup","Link","axios","backendServer","ReactPaginate","getRestEvents","connect","PropTypes","viewEvents","constructor","props","handleOnClick","e","console","log","localStorage","setItem","target","id","window","location","handlePageClick","selectedPage","selected","offset","state","perPage","setState","currentPage","eventList","pageCount","bind","componentDidMount","componentWillReceiveProps","nextProps","event","Math","ceil","length","render","count","slice","paginationElement","renderEvents","map","key","margin","border","eventName","date","time","eventLocation","eventDescription","pathname","_id","color","marginTop","float","fontWeight","backgroundColor","textAlign","paddingLeft","propTypes","func","isRequired","object","mapStateToProps","events"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,eAA1B,C,CACA;;AACA,OAAO,+CAAP;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,iBAAtC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,kBAAP;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAN,SAAyBb,SAAzB,CAAmC;AAC/Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBvBC,aAtBuB,GAsBNC,CAAD,IAAO;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCJ,CAAC,CAACK,MAAF,CAASC,EAA5C;AACAC,MAAAA,MAAM,CAACC,QAAP;AAEH,KA3BsB;;AAAA,SA6BvBC,eA7BuB,GA6BLT,CAAC,IAAI;AACnB,YAAMU,YAAY,GAAGV,CAAC,CAACW,QAAvB;AACA,YAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKG,KAAL,CAAWC,OAAzC;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEN,YADH;AAEVE,QAAAA,MAAM,EAAEA;AAFE,OAAd;AAMH,KAvCsB;;AAEf,SAAKC,KAAL,GAAa;AACTI,MAAAA,SAAS,EAAE,EADF;AAETL,MAAAA,MAAM,EAAE,CAFC;AAGTE,MAAAA,OAAO,EAAE,CAHA;AAITE,MAAAA,WAAW,EAAE,CAJJ;AAKTE,MAAAA,SAAS,EAAE;AALF,KAAb;AAOA,SAAKnB,aAAL,GAAqB,KAAKA,aAAL,CAAmBoB,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAELC,EAAAA,iBAAiB,GAAI;AACjB,SAAKtB,KAAL,CAAWL,aAAX,GADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACH;;AAqBD4B,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,SAAKP,QAAL,CAAc,EACZ,GAAG,KAAKF,KADI;AAEZI,MAAAA,SAAS,EAAG,CAACK,SAAS,CAACC,KAAX,GAAmB,KAAKzB,KAAL,CAAWyB,KAA9B,GAAsCD,SAAS,CAACC,KAFhD;AAGZL,MAAAA,SAAS,EAAEM,IAAI,CAACC,IAAL,CAAU,KAAKZ,KAAL,CAAWI,SAAX,CAAqBS,MAArB,GAA8B,KAAKb,KAAL,CAAWC,OAAnD;AAHC,KAAd;AAMD;;AAECa,EAAAA,MAAM,GAAG;AAEL1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AAEA,UAAM8B,KAAK,GAAG,KAAK9B,KAAL,CAAWyB,KAAX,CAAiBG,MAA/B;AACA,UAAMG,KAAK,GAAG,KAAKhB,KAAL,CAAWI,SAAX,CAAqBY,KAArB,CAA2B,KAAKhB,KAAL,CAAWD,MAAtC,EAA8C,KAAKC,KAAL,CAAWD,MAAX,GAAoB,KAAKC,KAAL,CAAWC,OAA7E,CAAd;AAEA,QAAIgB,iBAAiB,gBACjB,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,YADjB;AAEE,MAAA,SAAS,EAAE,QAFb;AAGE,MAAA,UAAU,eAAE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHd;AAIE,MAAA,SAAS,EAAEN,IAAI,CAACC,IAAL,CAAU,KAAKZ,KAAL,CAAWI,SAAX,CAAqBS,MAArB,GAA8B,KAAKb,KAAL,CAAWC,OAAnD,IAA8D,CAA9D,GAAkEU,IAAI,CAACC,IAAL,CAAU,KAAKZ,KAAL,CAAWI,SAAX,CAAqBS,MAArB,GAA8B,KAAKb,KAAL,CAAWC,OAAnD,CAAlE,GAAgI,CAJ7I;AAKE,MAAA,YAAY,EAAE,KAAKL,eALrB;AAME,MAAA,SAAS,EAAE,KAAKI,KAAL,CAAWG,WANxB;AAOE,MAAA,kBAAkB,EAAE,YAPtB;AAQE,MAAA,qBAAqB,EAAE,eARzB;AASE,MAAA,iBAAiB,EAAE,WATrB;AAUE,MAAA,iBAAiB,EAAE,UAVrB;AAWE,MAAA,eAAe,EAAE,QAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAiBA,QAAIe,YAAJ;;AACA,QAAG,KAAKlB,KAAL,CAAWI,SAAd,EAAyB;AACzBc,MAAAA,YAAY,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACT,KAAD,EAAQU,GAAR,KAAgB;AACrC;AAAA;AACQ;AACI,8BAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE,MAAT;AAAiBC,cAAAA,MAAM,EAAC;AAAxB,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAaZ,KAAK,CAACa,SAAnB,CADA,eAEA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAY;AAAG,YAAA,KAAK,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,OAAmDb,KAAK,CAACc,IAAzD,OAAgEd,KAAK,CAACe,IAAtE,CAFA,eAGA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAY;AAAG,YAAA,KAAK,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,OAAmDf,KAAK,CAACgB,aAAzD,MAHA,eAIA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYhB,KAAK,CAACiB,gBAAlB,CAJA,CAFJ,eAQI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAI;AAACC,cAAAA,QAAQ,EAAG,YAAWlB,KAAK,CAACmB,GAAI;AAAjC,aAAZ;AAAiD,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CARJ,CAFZ,CAcQ;;AAdR;AAgBC,OAjBU,CAAf;AAkBC;;AACD,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC,MAAX;AAAmBC,QAAAA,KAAK,EAAC,MAAzB;AAAiCC,QAAAA,UAAU,EAAC;AAA5C,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,KAAK,EAAE;AAACF,QAAAA,SAAS,EAAC,MAAX;AAAmBC,QAAAA,KAAK,EAAC,OAAzB;AAAkCE,QAAAA,eAAe,EAAC,KAAlD;AAAyDZ,QAAAA,MAAM,EAAE;AAAjE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,eAE6I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7I,eAEkJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlJ,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA;AAAI,MAAA,KAAK,EAAE;AAACa,QAAAA,SAAS,EAAC,QAAX;AAAqBL,QAAAA,KAAK,EAAE;AAA5B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAMQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSZ,YADT,CANR,CADA,CAFA,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,eAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfA,eAgBA;AAAQ,MAAA,KAAK,EAAE;AAACkB,QAAAA,WAAW,EAAE;AAAd,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACanB,iBADb,CAhBA,CADJ;AAqBE;;AArHyB;;AAwHnClC,UAAU,CAACsD,SAAX,GAAuB;AACnBzD,EAAAA,aAAa,EAAEE,SAAS,CAACwD,IAAV,CAAeC,UADX;AAEnB7B,EAAAA,KAAK,EAAE5B,SAAS,CAAC0D,MAAV,CAAiBD;AAFL,CAAvB;;AAKE,MAAME,eAAe,GAAGzC,KAAK,KAAK;AAChCU,EAAAA,KAAK,EAAEV,KAAK,CAAC0C,MAAN,CAAahC;AADY,CAAL,CAA7B;;AAKA,eAAe7B,OAAO,CAAC4D,eAAD,EAAkB;AAAE7D,EAAAA;AAAF,CAAlB,CAAP,CAA4CG,UAA5C,CAAf,C,CACF","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport illusionsImage from '../images/illusions.jpg';\nimport {Button, Card, CardGroup} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\nimport {getRestEvents} from '../../actions/eventAction';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass viewEvents extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventList: [],\n            offset: 0,\n            perPage: 2,\n            currentPage: 0,\n            pageCount: null\n        };\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\ncomponentDidMount () {\n    this.props.getRestEvents();\n    // axios.get(`${backendServer}/yelp/viewEvents/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     //console.log(res.data)\n    //     this.setState({ eventList: res.data });\n    //     //console.log(this.state.appetizerList);\n    // });\n}\n\nhandleOnClick = (e) => {\n    console.log(e);\n    localStorage.setItem(\"event_name\", e.target.id);\n    window.location()\n\n}\n\nhandlePageClick = e => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState({\n        currentPage: selectedPage,\n        offset: offset\n    }\n    );\n\n};\n\ncomponentWillReceiveProps(nextProps){\n    this.setState({\n      ...this.state,\n      eventList : !nextProps.event ? this.props.event : nextProps.event,\n      pageCount: Math.ceil(this.state.eventList.length / this.state.perPage)  \n    }\n   );\t\n  }\n\n    render() {\n\n        console.log(this.props);\n\n        const count = this.props.event.length;\n        const slice = this.state.eventList.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.eventList.length / this.state.perPage) > 0 ? Math.ceil(this.state.eventList.length / this.state.perPage) : 1}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n\n\n        let renderEvents;\n        if(this.state.eventList) {\n        renderEvents = slice.map((event, key) => {\n            return (\n                    // <div class='col-md-6'>\n                        <Card style={{margin: \"10px\", border:\"1px solid black\"}}>\n                            {/* <Card.Img variant=\"top\" src={illusionsImage} /> */}\n                            <Card.Body>\n                            <Card.Title>{event.eventName}</Card.Title>\n                            <Card.Text> <i class=\"fas fa-hourglass-half\"></i> {event.date} {event.time}</Card.Text>\n                            <Card.Text> <i class=\"fas fa-map-marker-alt\"></i> {event.eventLocation} </Card.Text>\n                            <Card.Text>{event.eventDescription}</Card.Text>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Link to = {{pathname: `/regUser/${event._id}`}} style={{color: \"red\"}}> Registered people </Link>\n                            </Card.Footer>\n                        </Card>\n                    //  </div>\n                )\n            })\n        }\n        return (\n            <React.Fragment>\n            <Navigationbar />\n            <div class='panel'>\n            <div class=\"container\">\n            <h5 style={{marginTop:\"25px\", float:\"left\", fontWeight:\"bold\"}}> Add an event </h5>\n            <Button href=\"/addEvent\" style={{marginTop:\"15px\", float:\"right\", backgroundColor:\"red\", border: \"1px solid red\"}}> Create an event </Button><br/><br/>\n            <hr />\n            <h2 style={{textAlign:\"center\", color: \"red\"}}>Events</h2>\n            <br />\n                    <CardGroup>\n                            {renderEvents}\n                    </CardGroup>\n            </div>\n            </div>\n            <br />\n            <br />\n            <center style={{paddingLeft: \"40%\"}}>\n                        {paginationElement}\n            </center>\n            </React.Fragment>\n        )}\n}\n\nviewEvents.propTypes = {\n    getRestEvents: PropTypes.func.isRequired,\n    event: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => ({\n    event: state.events.event\n\n  });\n\n  export default connect(mapStateToProps, { getRestEvents })(viewEvents);\n//export default viewEvents;"]},"metadata":{},"sourceType":"module"}