{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restOrders.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css'; // import { getMainCourse } from './getMaincourse';\n\nexport class restOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = e => {\n      e.preventDefault();\n      this.setState({\n        orderStatus: e.target.value\n      });\n      this.setState({\n        order_id: e.target.id\n      });\n    };\n\n    this.handleFilter = e => {\n      //console.log(e.target.id);\n      e.preventDefault(); //this.setState({orders: e.target.id})\n\n      let orders = e.target.id;\n      let filteredData = this.state.restOrders.filter(order => order.finalOrderStatus == orders);\n      console.log(filteredData);\n      this.setState({\n        tempRestOrder: filteredData\n      });\n    };\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.onUpdate = e => {\n      e.preventDefault();\n      const data = {\n        order_id: this.state.order_id,\n        order_status: this.state.orderStatus\n      };\n      console.log(data);\n      return axios.post(`${backendServer}/yelp/order/update`, data).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n          alert(\"Order updated\");\n          window.location = `/restOrders`;\n        }\n      }).catch(function (error) {\n        alert(\"Error\");\n      });\n    };\n\n    this.handleReset = e => {\n      console.log(\"handle reset\");\n      e.preventDefault();\n      let allOrders = this.state.restOrders;\n      console.log(allOrders);\n      this.setState({\n        tempRestOrder: allOrders\n      });\n    };\n\n    this.state = {\n      restOrders: [],\n      tempRestOrder: [],\n      offset: 0,\n      perPage: 2,\n      currentPage: 0,\n      pageCount: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${backendServer}/yelp/order/rest/${localStorage.getItem(\"rest_id\")}`).then(res => {\n      this.setState({\n        restOrders: res.data,\n        tempRestOrder: res.data\n      }); //console.log(this.state.appetizerList);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      beverageList: !nextProps.tempRestOrder ? this.state.tempRestOrder : nextProps.tempRestOrder,\n      pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.state.tempRestOrder);\n    const count = this.state.tempRestOrder.length;\n    const slice = this.state.tempRestOrder.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestOrder.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    });\n    let renderOrders = this.state.tempRestOrder.map(order => {\n      let button1;\n      let button2;\n\n      if (order.orderType === 'pickup') {\n        button1 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"Pickup ready\",\n          value: \"Pickup ready\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }\n        });\n        button2 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"Picked up\",\n          value: \"Picked up\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 27\n          }\n        });\n      } else {\n        button1 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"On the way\",\n          value: \"On the way\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 27\n          }\n        });\n        button2 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order._id,\n          name: order.dishName,\n          label: \"Delivered\",\n          value: \"Delivered\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 27\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          border: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        style: {\n          marginLeft: \"10px\",\n          fontSize: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, order.dishName, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 36\n        }\n      }, \" Customer: \"), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `/userProfile/${order.userId}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, \" \", order.firstName, \" \", order.lastName, \" \"), \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 37\n        }\n      }, \"Order type:\"), \" \", order.orderType), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 37\n        }\n      }, \"Order Status:\"), \" \", order.orderStatus), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 37\n        }\n      }, \"Orders:\"), \" \", order.finalOrderStatus, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.onUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        id: order._id,\n        name: order.dishName,\n        label: \"Order received\",\n        value: \"Order received\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        id: order._id,\n        name: order.dishName,\n        label: \"Preparing\",\n        value: \"Preparing\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      }), button1, button2, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"10px\",\n          backgroundColor: \"red\",\n          border: \"1px solid red\"\n        },\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, \"Update order status \")))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), paginationElement, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        marginLeft: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \" Your orders \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }), renderOrders), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 24\n      }\n    }, \" Filter \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"New order\",\n      label: \"New Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Delivered order\",\n      label: \"Delivered Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Cancelled order\",\n      label: \"Cancelled Order\",\n      onChange: this.handleFilter,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"red\",\n        border: \"1px solid red\"\n      },\n      type: \"submit\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, \" Remove filter \")))));\n  }\n\n}\nexport default restOrders;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restOrders.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","ReactPaginate","restOrders","constructor","props","handleCheckboxChange","e","preventDefault","setState","orderStatus","target","value","order_id","id","handleFilter","orders","filteredData","state","filter","order","finalOrderStatus","console","log","tempRestOrder","handlePageClick","alert","selectedPage","selected","offset","perPage","currentPage","onUpdate","data","order_status","post","then","response","status","window","location","catch","error","handleReset","allOrders","pageCount","componentDidMount","get","localStorage","getItem","res","componentWillReceiveProps","nextProps","beverageList","Math","ceil","length","render","count","slice","paginationElement","renderOrders","map","button1","button2","orderType","_id","dishName","marginLeft","color","border","fontSize","fontWeight","pathname","userId","firstName","lastName","marginTop","backgroundColor","float","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,eAA1B,C,CACA;;AACA,OAAO,+CAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,SAA7B,QAA6C,iBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,kBAAP,C,CACA;;AAEA,OAAO,MAAMC,UAAN,SAAyBX,SAAzB,CAAmC;AACtCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuBnBC,oBAvBmB,GAuBKC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEH,CAAC,CAACI,MAAF,CAASC;AADZ,OAAd;AAGA,WAAKH,QAAL,CAAe;AACXI,QAAAA,QAAQ,EAAEN,CAAC,CAACI,MAAF,CAASG;AADR,OAAf;AAGH,KA/BkB;;AAAA,SAkCnBC,YAlCmB,GAkCHR,CAAD,IAAO;AAClB;AACAA,MAAAA,CAAC,CAACC,cAAF,GAFkB,CAGlB;;AACA,UAAIQ,MAAM,GAAGT,CAAC,CAACI,MAAF,CAASG,EAAtB;AACA,UAAIG,YAAY,GAAG,KAAKC,KAAL,CAAWf,UAAX,CAAsBgB,MAAtB,CAA6BC,KAAK,IACjDA,KAAK,CAACC,gBAAN,IAA0BL,MADX,CAAnB;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,WAAKR,QAAL,CAAc;AAACe,QAAAA,aAAa,EAACP;AAAf,OAAd;AACH,KA5CkB;;AAAA,SA8CnBQ,eA9CmB,GA8CDlB,CAAC,IAAI;AACnBmB,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA,YAAMC,YAAY,GAAGpB,CAAC,CAACqB,QAAvB;AACA,YAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKT,KAAL,CAAWY,OAAzC;AAEA,WAAKrB,QAAL,CAAc;AACVsB,QAAAA,WAAW,EAAEJ,YADH;AAEVE,QAAAA,MAAM,EAAEA;AAFE,OAAd;AAKH,KAxDkB;;AAAA,SAoEnBG,QApEmB,GAoEPzB,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMyB,IAAI,GAAG;AACTpB,QAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWL,QADZ;AAETqB,QAAAA,YAAY,EAAE,KAAKhB,KAAL,CAAWR;AAFhB,OAAb;AAIAY,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,aAAOjC,KAAK,CAACmC,IAAN,CAAY,GAAElC,aAAc,oBAA5B,EAAgDgC,IAAhD,EACNG,IADM,CACAC,QAAD,IAAc;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAQ,CAACC,MAArB;;AACF,YAAID,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BZ,UAAAA,KAAK,CAAC,eAAD,CAAL;AACDa,UAAAA,MAAM,CAACC,QAAP,GAAmB,aAAnB;AACA;AACF,OAPM,EAQNC,KARM,CAQA,UAASC,KAAT,EAAgB;AACpBhB,QAAAA,KAAK,CAAC,OAAD,CAAL;AACF,OAVM,CAAP;AAWD,KAtFgB;;AAAA,SAwFjBiB,WAxFiB,GAwFFpC,CAAD,IAAO;AACnBe,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACEhB,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIoC,SAAS,GAAG,KAAK1B,KAAL,CAAWf,UAA3B;AACAmB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,SAAZ;AACA,WAAKnC,QAAL,CAAc;AAACe,QAAAA,aAAa,EAAEoB;AAAhB,OAAd;AACH,KA9FgB;;AAEf,SAAK1B,KAAL,GAAa;AACTf,MAAAA,UAAU,EAAE,EADH;AAETqB,MAAAA,aAAa,EAAE,EAFN;AAGTK,MAAAA,MAAM,EAAE,CAHC;AAITC,MAAAA,OAAO,EAAE,CAJA;AAKTC,MAAAA,WAAW,EAAE,CALJ;AAMTc,MAAAA,SAAS,EAAE;AANF,KAAb;AAQH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB9C,IAAAA,KAAK,CAAC+C,GAAN,CAAW,GAAE9C,aAAc,oBAAmB+C,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,EAA9E,EACCb,IADD,CACMc,GAAG,IAAI;AACT,WAAKzC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAE+C,GAAG,CAACjB,IAAlB;AACdT,QAAAA,aAAa,EAAE0B,GAAG,CAACjB;AADL,OAAd,EADS,CAGT;AACH,KALD;AAMH;;AAsCDkB,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,SAAK3C,QAAL,CAAc,EACZ,GAAG,KAAKS,KADI;AAEZmC,MAAAA,YAAY,EAAG,CAACD,SAAS,CAAC5B,aAAX,GAA2B,KAAKN,KAAL,CAAWM,aAAtC,GAAsD4B,SAAS,CAAC5B,aAFnE;AAGZqB,MAAAA,SAAS,EAAES,IAAI,CAACC,IAAL,CAAU,KAAKrC,KAAL,CAAWM,aAAX,CAAyBgC,MAAzB,GAAkC,KAAKtC,KAAL,CAAWY,OAAvD;AAHC,KAAd;AAMD;;AA+BH2B,EAAAA,MAAM,GAAI;AACNnC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,aAAvB;AAEA,UAAMkC,KAAK,GAAG,KAAKxC,KAAL,CAAWM,aAAX,CAAyBgC,MAAvC;AACA,UAAMG,KAAK,GAAG,KAAKzC,KAAL,CAAWM,aAAX,CAAyBmC,KAAzB,CAA+B,KAAKzC,KAAL,CAAWW,MAA1C,EAAkD,KAAKX,KAAL,CAAWW,MAAX,GAAoB,KAAKX,KAAL,CAAWY,OAAjF,CAAd;AAEA,QAAI8B,iBAAiB,gBACjB,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,YADjB;AAEE,MAAA,SAAS,EAAE,QAFb;AAGE,MAAA,UAAU,eAAE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHd;AAIE,MAAA,SAAS,EAAEN,IAAI,CAACC,IAAL,CAAU,KAAKrC,KAAL,CAAWM,aAAX,CAAyBgC,MAAzB,GAAkC,KAAKtC,KAAL,CAAWY,OAAvD,IAAkE,CAAlE,GAAsEwB,IAAI,CAACC,IAAL,CAAU,KAAKrC,KAAL,CAAWM,aAAX,CAAyBgC,MAAzB,GAAkC,KAAKtC,KAAL,CAAWY,OAAvD,CAAtE,GAAwI,EAJrJ;AAKE,MAAA,YAAY,EAAE,KAAKL,eALrB;AAME,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWa,WANxB;AAOE,MAAA,kBAAkB,EAAE,YAPtB;AAQE,MAAA,qBAAqB,EAAE,eARzB;AASE,MAAA,iBAAiB,EAAE,WATrB;AAUE,MAAA,iBAAiB,EAAE,UAVrB;AAWE,MAAA,eAAe,EAAE,QAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAgBA,QAAI8B,YAAY,GAAG,KAAK3C,KAAL,CAAWM,aAAX,CAAyBsC,GAAzB,CAA6B1C,KAAK,IAAI;AACrD,UAAI2C,OAAJ;AACA,UAAIC,OAAJ;;AACA,UAAG5C,KAAK,CAAC6C,SAAN,KAAoB,QAAvB,EAAgC;AAC5BF,QAAAA,OAAO,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAI3C,KAAK,CAAC8C,GAAxB;AAA6B,UAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAAzC;AAAmD,UAAA,KAAK,EAAC,cAAzD;AACE,UAAA,KAAK,EAAC,cADR;AACuB,UAAA,QAAQ,EAAE,KAAK7D,oBADtC;AAC4D,UAAA,KAAK,EAAE;AAAC8D,YAAAA,UAAU,EAAC,MAAZ;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAEAL,QAAAA,OAAO,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAI5C,KAAK,CAAC8C,GAAxB;AAA6B,UAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAAzC;AAAmD,UAAA,KAAK,EAAC,WAAzD;AACN,UAAA,KAAK,EAAC,WADA;AACY,UAAA,QAAQ,EAAE,KAAK7D,oBAD3B;AACiD,UAAA,KAAK,EAAE;AAAC8D,YAAAA,UAAU,EAAC,MAAZ;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAEH,OALD,MAKO;AACHN,QAAAA,OAAO,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAI3C,KAAK,CAAC8C,GAAxB;AAA6B,UAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAAzC;AAAmD,UAAA,KAAK,EAAC,YAAzD;AACE,UAAA,KAAK,EAAC,YADR;AACqB,UAAA,QAAQ,EAAE,KAAK7D,oBADpC;AAC0D,UAAA,KAAK,EAAE;AAAC8D,YAAAA,UAAU,EAAC,MAAZ;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WADjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAEAL,QAAAA,OAAO,gBAAG,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAI5C,KAAK,CAAC8C,GAAxB;AAA6B,UAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAAzC;AAAmD,UAAA,KAAK,EAAC,WAAzD;AACN,UAAA,KAAK,EAAC,WADA;AACY,UAAA,QAAQ,EAAE,KAAK7D,oBAD3B;AACiD,UAAA,KAAK,EAAE;AAAC8D,YAAAA,UAAU,EAAC,MAAZ;AAAoBC,YAAAA,KAAK,EAAE;AAA3B,WADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAEH;;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAE;AAACF,UAAAA,UAAU,EAAC,MAAZ;AAAoBG,UAAAA,QAAQ,EAAE;AAA9B,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2DnD,KAAK,CAAC+C,QAAjE,MADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAW;AAAM,QAAA,KAAK,EAAE;AAACK,UAAAA,UAAU,EAAE,MAAb;AAAqBJ,UAAAA,UAAU,EAAC;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAX,eACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAI;AAACK,UAAAA,QAAQ,EAAG,gBAAerD,KAAK,CAACsD,MAAO;AAAxC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0DtD,KAAK,CAACuD,SAAhE,OAA4EvD,KAAK,CAACwD,QAAlF,MADJ,MAFJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAY;AAAM,QAAA,KAAK,EAAE;AAACJ,UAAAA,UAAU,EAAE,MAAb;AAAqBJ,UAAAA,UAAU,EAAC;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAZ,OAAsFhD,KAAK,CAAC6C,SAA5F,CALJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAY;AAAM,QAAA,KAAK,EAAE;AAACO,UAAAA,UAAU,EAAE,MAAb;AAAqBJ,UAAAA,UAAU,EAAC;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAZ,OAAwFhD,KAAK,CAACV,WAA9F,CANJ,eAOI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAY;AAAM,QAAA,KAAK,EAAE;AAAC8D,UAAAA,UAAU,EAAE,MAAb;AAAqBJ,UAAAA,UAAU,EAAC;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ,OAAkFhD,KAAK,CAACC,gBAAxF,MAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,eASI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKW,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,EAAE,EAAIZ,KAAK,CAAC8C,GADhB;AAEI,QAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAFhB;AAGI,QAAA,KAAK,EAAC,gBAHV;AAII,QAAA,KAAK,EAAC,gBAJV;AAKI,QAAA,QAAQ,EAAE,KAAK7D,oBALnB;AAMI,QAAA,KAAK,EAAE;AAAC8D,UAAAA,UAAU,EAAC,MAAZ;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eASI,oBAAC,IAAD,CAAM,KAAN;AACI,QAAA,EAAE,EAAIjD,KAAK,CAAC8C,GADhB;AAEI,QAAA,IAAI,EAAE9C,KAAK,CAAC+C,QAFhB;AAGI,QAAA,KAAK,EAAC,WAHV;AAII,QAAA,KAAK,EAAC,WAJV;AAKI,QAAA,QAAQ,EAAE,KAAK7D,oBALnB;AAMI,QAAA,KAAK,EAAE;AAAC8D,UAAAA,UAAU,EAAC,MAAZ;AAAoBC,UAAAA,KAAK,EAAE;AAA3B,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAiBKN,OAjBL,EAkBKC,OAlBL,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAC,MAAb;AAAqBS,UAAAA,SAAS,EAAE,MAAhC;AAAwCC,UAAAA,eAAe,EAAE,KAAzD;AAAgER,UAAAA,MAAM,EAAE;AAAxE,SAAf;AAAyG,QAAA,IAAI,EAAC,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,CAnBJ,CATJ,CADJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCJ,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApCJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCJ,CADJ;AAyCH,KAvDkB,CAAnB;AAwDA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKV,iBAFL,eAGI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACmB,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAE;AAACX,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGKR,YAHL,CADJ,eAMI;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBX,QAAAA,KAAK,EAAC;AAAvB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AACK,MAAA,EAAE,EAAG,WADV;AAEK,MAAA,KAAK,EAAC,WAFX;AAGK,MAAA,QAAQ,EAAE,KAAKtD,YAHpB;AAKK,MAAA,KAAK,EAAE;AAACqD,QAAAA,UAAU,EAAC;AAAZ,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAQC,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,EAAE,EAAG,iBADT;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,QAAQ,EAAE,KAAKrD,YAHnB;AAII,MAAA,KAAK,EAAE;AAACqD,QAAAA,UAAU,EAAC;AAAZ,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,eAcC,oBAAC,IAAD,CAAM,KAAN;AACI,MAAA,EAAE,EAAG,iBADT;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,QAAQ,EAAE,KAAKrD,YAHnB;AAII,MAAA,KAAK,EAAE;AAACqD,QAAAA,UAAU,EAAC;AAAZ,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdD,eAoBC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAC,MAAZ;AAAoBS,QAAAA,SAAS,EAAE,MAA/B;AAAuCC,QAAAA,eAAe,EAAE,KAAxD;AAA+DR,QAAAA,MAAM,EAAE;AAAvE,OAAf;AAAyG,MAAA,IAAI,EAAC,QAA9G;AAAuH,MAAA,OAAO,EAAE,KAAK3B,WAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBApBD,CAHH,CANJ,CAHJ,CADJ;AAyCH;;AAxNqC;AA2N1C,eAAexC,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\n// import { getMainCourse } from './getMaincourse';\n\nexport class restOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restOrders: [],\n            tempRestOrder: [],\n            offset: 0,\n            perPage: 2,\n            currentPage: 0,\n            pageCount: null\n        };\n    }\n\n\n    componentDidMount() {\n        axios.get(`${backendServer}/yelp/order/rest/${localStorage.getItem(\"rest_id\")}`)\n        .then(res => {\n            this.setState({ restOrders: res.data,\n            tempRestOrder: res.data });\n            //console.log(this.state.appetizerList);\n        });\n    }\n\n\n    handleCheckboxChange = (e) => {\n        e.preventDefault();\n        this.setState({\n            orderStatus: e.target.value\n        })\n        this.setState ({\n            order_id: e.target.id\n        })\n    }\n\n\n    handleFilter = (e) => {\n        //console.log(e.target.id);\n        e.preventDefault();\n        //this.setState({orders: e.target.id})\n        let orders = e.target.id;\n        let filteredData = this.state.restOrders.filter(order =>\n            order.finalOrderStatus == orders\n        );\n        console.log(filteredData);\n        this.setState({tempRestOrder:filteredData});\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n          ...this.state,\n          beverageList : !nextProps.tempRestOrder ? this.state.tempRestOrder : nextProps.tempRestOrder,\n          pageCount: Math.ceil(this.state.tempRestOrder.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n\n    onUpdate = (e) => {\n        e.preventDefault();\n        const data = {\n            order_id: this.state.order_id,\n            order_status: this.state.orderStatus,\n        }\n        console.log(data);\n        return axios.post(`${backendServer}/yelp/order/update`,data)\n        .then((response) => {\n            console.log(response.status)\n          if (response.status === 200) {\n            alert(\"Order updated\")\n           window.location = `/restOrders`\n          }\n        })\n        .catch(function(error) {\n           alert(\"Error\")\n        })\n      }\n\n      handleReset = (e) => {\n        console.log(\"handle reset\")\n          e.preventDefault();\n          let allOrders = this.state.restOrders;\n          console.log(allOrders)\n          this.setState({tempRestOrder: allOrders})\n      }\n\n    render () {\n        console.log(this.state.tempRestOrder);\n\n        const count = this.state.tempRestOrder.length;\n        const slice = this.state.tempRestOrder.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.tempRestOrder.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestOrder.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n\n        let renderOrders = this.state.tempRestOrder.map(order => {\n            let button1;\n            let button2;\n            if(order.orderType === 'pickup'){\n                button1 = <Form.Check id = {order._id} name={order.dishName} label='Pickup ready' \n                            value='Pickup ready' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order._id} name={order.dishName} label='Picked up' \n                    value='Picked up' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            } else {\n                button1 = <Form.Check id = {order._id} name={order.dishName} label='On the way' \n                            value='On the way' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order._id} name={order.dishName} label='Delivered' \n                    value='Delivered' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            }\n            return (\n                <div>\n                    <Card style={{border: \"none\"}}>\n                        <Card.Title style={{marginLeft:\"10px\", fontSize: \"25px\"}}>{order.dishName} </Card.Title>\n                        <Card.Text><span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}> Customer: </span>\n                            <Link to = {{pathname: `/userProfile/${order.userId}`}}> {order.firstName} {order.lastName} </Link> </Card.Text>\n                        {/* <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Restuarant:</span> {order.rest_name}</Card.Text> */}\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order type:</span> {order.orderType}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order Status:</span> {order.orderStatus}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Orders:</span> {order.finalOrderStatus} </Card.Text>\n                        <hr />\n                        <Form onSubmit={this.onUpdate}>\n                            <Form.Check\n                                id = {order._id}\n                                name={order.dishName}\n                                label='Order received'\n                                value='Order received'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            <Form.Check\n                                id = {order._id}\n                                name={order.dishName}\n                                label='Preparing'\n                                value='Preparing'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            {button1}\n                            {button2}\n                            <div>\n                            <Button style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}} type=\"submit\"> \n                                 Update order status </Button>\n                            </div>\n                        </Form>\n                    </Card>\n                    <hr />\n                    <br/>\n                    <br/>\n                </div>\n            )\n        })\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                {paginationElement}\n                <div class=\"container\">\n                    <div style={{float: \"left\"}}>\n                    <h1 style={{marginLeft: \"10px\", color:\"red\"}}> Your orders </h1>\n                    <hr />\n                        {renderOrders}\n                    </div>\n                    <div style={{float: \"right\"}}>\n                       <h4 style={{margin: \"10px\", color:\"red\"}}> Filter </h4> \n                       <hr />\n                       <Form>\n                       <Form.Check\n                            id = 'New order'\n                            label='New Order'\n                            onChange={this.handleFilter\n                            }\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Delivered order'\n                            label='Delivered Order'\n                            onChange={this.handleFilter}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Cancelled order'\n                            label='Cancelled Order'\n                            onChange={this.handleFilter}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Button style={{marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\" }} type=\"submit\" onClick={this.handleReset}> Remove filter </Button>\n                        </Form>\n                    </div>\n\n                </div>\n                \n            </React.Fragment>\n        )\n    }\n         \n}\nexport default restOrders;"]},"metadata":{},"sourceType":"module"}