{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restaurantList.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport illusionsImage from '../images/restList.jpg';\nimport { Button, Card, CardGroup, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport MapContainer from '../maps';\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\nconst location = {\n  address: '1600 Amphitheatre Parkway, Mountain View, california.',\n  lat: 37.42216,\n  lng: -122.08427\n};\n\nclass viewRest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = e => {\n      console.log(e);\n      e.preventDefault();\n      this.setState({\n        delivery_method: e.target.id\n      });\n      let delivery_method = e.target.id;\n      console.log(delivery_method);\n      let filteredData = this.state.restList.filter(order => order.delivery_method == delivery_method);\n      console.log(filteredData);\n      this.setState({\n        tempRestList: filteredData\n      });\n    };\n\n    this.handleClick = e => {\n      //prevent page from refresh\n      console.log(e.target);\n      e.preventDefault();\n      localStorage.setItem(\"rest_id\", e.target.id);\n      localStorage.setItem(\"rest_name\", e.target.name);\n      window.location = \"/restaurant_profile\";\n    };\n\n    this.handleReset = e => {\n      e.preventDefault();\n      let allOrders = this.state.restList;\n      this.setState({\n        tempRestList: allOrders\n      });\n    };\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.state = {\n      restList: [],\n      tempRestList: [],\n      searchKeyword: null,\n      searchCategory: 0,\n      offset: 0,\n      perPage: 1,\n      currentPage: 0,\n      pageCount: null\n    }; //console.log(props);\n  }\n\n  componentDidMount() {\n    console.log(this.props.location.state.searchKeyword);\n\n    if (this.props.location.state && this.props.location.state.searchKeyword !== 'undefined') {\n      this.setState({\n        searchCategory: this.props.location.state.searchCategory,\n        searchKeyword: this.props.location.state.searchKeyword\n      }, () => {\n        axios.get(`${backendServer}/restaurantSearch/${this.state.searchKeyword}/${this.state.searchCategory}`).then(response => {\n          console.log(response);\n          this.setState({\n            restList: response.data,\n            tempRestList: response.data\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      });\n    }\n\n    ;\n  }\n\n  componentDidUpdate() {\n    if (this.props.location.state && this.state.searchKeyword !== this.props.location.state.searchKeyword) {\n      this.setState({\n        searchKeyword: this.props.location.state.searchKeyword,\n        searchCategory: this.props.location.state.searchCategory\n      }, () => {\n        axios.get(`${backendServer}/restaurantSearch/${this.state.searchKeyword}/${this.state.searchCategory}`).then(response => this.setState({\n          tempRestList: response.data\n        })).catch(error => {\n          console.log(error);\n        });\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      tempRestList: !nextProps.tempRestList ? this.state.tempRestList : nextProps.tempRestList,\n      pageCount: Math.ceil(this.state.tempRestList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.state.tempRestList);\n    const count = this.state.tempRestList.length;\n    const slice = this.state.tempRestList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.tempRestList.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestList.length / this.state.perPage) : 1,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    });\n    let renderRest;\n\n    if (this.state.tempRestList) {\n      renderRest = slice.map((rest, key) => {\n        var fileName = rest.fileName;\n        var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          class: \"col-md-6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            margin: \"10px\",\n            border: \"1px solid black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Img, {\n          id: rest.rest_id,\n          name: rest.name,\n          style: {\n            height: \"150px\",\n            width: \"200px\"\n          },\n          variant: \"top\",\n          src: imgSrc,\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          variant: \"link\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: rest._id,\n          name: rest.name,\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }\n        }, rest.name, \" \")), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-location-arrow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 37\n          }\n        }), \" \", rest.street, \", \", rest.city, \", \", rest.zipcode), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-bread-slice\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 37\n          }\n        }), \" \", rest.cuisine, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fas fa-check\",\n          style: {\n            color: \"green\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 37\n          }\n        }), \" \", rest.deliveryMethod, \" \"))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-2\",\n      style: {\n        float: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: \"15px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 24\n      }\n    }, \" Delivery Method \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Yelp delivery\",\n      label: \"Yelp delivery\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Dine In\",\n      label: \"Dine In\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      id: \"Curbside pickup\",\n      label: \"Curbside pickup\",\n      onChange: this.handleCheckboxChange,\n      style: {\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginLeft: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"red\",\n        border: \"1px solid red\"\n      },\n      type: \"submit\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \" Remove filters \"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, \"Restaurants\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, renderRest))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"45%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, paginationElement));\n  }\n\n}\n\nexport default viewRest;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/restaurantList.js"],"names":["React","Component","Navigationbar","illusionsImage","Button","Card","CardGroup","Form","axios","backendServer","MapContainer","ReactPaginate","location","address","lat","lng","viewRest","constructor","props","handleCheckboxChange","e","console","log","preventDefault","setState","delivery_method","target","id","filteredData","state","restList","filter","order","tempRestList","handleClick","localStorage","setItem","name","window","handleReset","allOrders","handlePageClick","alert","selectedPage","selected","offset","perPage","currentPage","searchKeyword","searchCategory","pageCount","componentDidMount","get","then","response","data","catch","error","componentDidUpdate","componentWillReceiveProps","nextProps","Math","ceil","length","render","count","slice","paginationElement","renderRest","map","rest","key","fileName","imgSrc","margin","border","rest_id","height","width","_id","street","city","zipcode","cuisine","color","deliveryMethod","float","handleFilter","marginLeft","marginTop","backgroundColor","textAlign","paddingLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport illusionsImage from '../images/restList.jpg';\nimport {Button, Card, CardGroup, Form} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nimport MapContainer from '../maps'\nimport ReactPaginate from 'react-paginate';\nimport './pagination.css';\n\nconst location = {\n  address: '1600 Amphitheatre Parkway, Mountain View, california.',\n  lat: 37.42216,\n  lng: -122.08427,\n}\n\nclass viewRest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restList: [],\n            tempRestList: [],\n            searchKeyword: null,\n            searchCategory: 0,\n            offset: 0,\n            perPage: 1,\n            currentPage: 0,\n            pageCount: null\n        };\n        //console.log(props);\n    }\n\ncomponentDidMount () {\n    console.log(this.props.location.state.searchKeyword)\n    if (this.props.location.state && this.props.location.state.searchKeyword !== 'undefined') {\n        this.setState({\n            searchCategory: this.props.location.state.searchCategory,\n            searchKeyword: this.props.location.state.searchKeyword,\n          },\n          () => {\n          axios.get(`${backendServer}/restaurantSearch/${this.state.searchKeyword}/${this.state.searchCategory}`,)\n            .then((response) => {\n              console.log(response)\n                this.setState({\n                  restList: response.data, tempRestList: response.data\n                });\n              })\n              .catch((error) => {\n                console.log(error);\n              });\n          },\n        );\n    };\n}\n\ncomponentDidUpdate() {\n    if (\n      this.props.location.state &&\n      this.state.searchKeyword !== this.props.location.state.searchKeyword\n    ) {\n      this.setState(\n        {\n            searchKeyword: this.props.location.state.searchKeyword,\n            searchCategory: this.props.location.state.searchCategory,\n        },\n        () => {\n          axios\n            .get(\n              `${backendServer}/restaurantSearch/${this.state.searchKeyword}/${this.state.searchCategory}`,\n            )\n            .then((response) =>\n              this.setState({\n                tempRestList: response.data\n              }),\n            )\n            .catch((error) => {\n              console.log(error);\n            });\n        },\n      );\n    }\n  }\n\nhandleCheckboxChange = (e) => {\n  console.log(e);\n    e.preventDefault();\n    this.setState({delivery_method: e.target.id})\n    let delivery_method = e.target.id;\n    console.log(delivery_method)\n    let filteredData = this.state.restList.filter(order =>\n    order.delivery_method == delivery_method\n    );\n    console.log(filteredData);\n    this.setState({tempRestList:filteredData});\n}\n\nhandleClick = (e) => {\n    //prevent page from refresh\n    console.log(e.target)\n    e.preventDefault();\n    localStorage.setItem(\"rest_id\", e.target.id);\n    localStorage.setItem(\"rest_name\", e.target.name);\n    window.location = \"/restaurant_profile\";\n};\n\n  handleReset = (e) => {\n      e.preventDefault();\n      let allOrders = this.state.restList;\n      this.setState({tempRestList: allOrders})\n  }\n\n  handlePageClick = e => {\n    alert(\"inside handle\");\n    const selectedPage = e.selected;\n    const offset = selectedPage * this.state.perPage;\n\n    this.setState({\n        currentPage: selectedPage,\n        offset: offset\n    }\n    );\n};\n\ncomponentWillReceiveProps(nextProps){\n    this.setState({\n      ...this.state,\n      tempRestList : !nextProps.tempRestList ? this.state.tempRestList : nextProps.tempRestList,\n      pageCount: Math.ceil(this.state.tempRestList.length / this.state.perPage)  \n    }\n   );\t\n  }\n\n    render() {\n      console.log(this.state.tempRestList);\n\n        const count = this.state.tempRestList.length;\n        const slice = this.state.tempRestList.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n        let paginationElement = (\n          <ReactPaginate\n            previousLabel={\"← Previous\"}\n            nextLabel={\"Next →\"}\n            breakLabel={<span className=\"gap\">...</span>}\n            pageCount={Math.ceil(this.state.tempRestList.length / this.state.perPage) > 0 ? Math.ceil(this.state.tempRestList.length / this.state.perPage) : 1}\n            onPageChange={this.handlePageClick}\n            forcePage={this.state.currentPage}\n            containerClassName={\"pagination\"}\n            previousLinkClassName={\"previous_page\"}\n            nextLinkClassName={\"next_page\"}\n            disabledClassName={\"disabled\"}\n            activeClassName={\"active\"}\n          />\n        );\n\n      let renderRest;\n      if (this.state.tempRestList) {\n      renderRest = slice.map((rest, key) => {\n          var fileName = rest.fileName\n          var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`\n            return (\n                <div class='col-md-6'>\n                    <Card style={{margin: \"10px\", border:\"1px solid black\"}}>\n                        <Card.Img id = {rest.rest_id} name={rest.name} style={{height: \"150px\", width: \"200px\"}}variant=\"top\" src={imgSrc} onClick={this.handleClick} />\n                        <Card.Body>\n                        <Card.Title variant=\"link\">  \n                            <a id = {rest._id} name={rest.name} onClick={this.handleClick}>{rest.name} </a>\n                        </Card.Title>\n                        <Card.Text> <i class=\"fas fa-location-arrow\"></i> {rest.street}, {rest.city}, {rest.zipcode}</Card.Text>\n                        <Card.Text> <i class=\"fas fa-bread-slice\"></i> {rest.cuisine} </Card.Text>\n                        <Card.Text> <i class=\"fas fa-check\" style={{color: \"green\"}}></i> {rest.deliveryMethod} </Card.Text>\n                        {/* <Card.Text>{event.event_description}</Card.Text> */}\n                        </Card.Body>\n                    </Card>\n                    <br/>\n                </div>\n            )\n        })\n      }\n        return (\n            <React.Fragment>\n            <Navigationbar />\n            <div >\n            <div class= \"col-md-2\" style={{float: \"left\"}}>\n                       <h4 style={{ margin: \"15px\",color:\"red\"}}> Delivery Method </h4> \n                       <hr />\n                       <Form onSubmit={this.handleFilter}>\n                       <Form.Check\n                            id = 'Yelp delivery'\n                            label='Yelp delivery'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Dine In'\n                            label='Dine In'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Form.Check\n                            id = 'Curbside pickup'\n                            label='Curbside pickup'\n                            onChange={this.handleCheckboxChange}\n                            style={{marginLeft:\"10px\" }}\n                        />\n                        <Button style={{marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\" }} type=\"submit\" onClick={this.handleReset}> Remove filters </Button>\n                        </Form>\n                    </div>  \n            <div class=\"col-md-10\">\n            <h2 style={{textAlign:\"center\", marginTop:\"10px\", color: \"red\"}}>Restaurants</h2>\n            <hr />\n            <CardGroup>\n                {renderRest}\n            </CardGroup> \n            </div>\n            {/* <MapContainer restaurantlist={this.state.restList}></MapContainer>  */}\n            </div>\n            <div style={{paddingLeft: \"45%\"}}>\n              {paginationElement}\n            </div>\n            </React.Fragment>\n        )}\n}\n\nexport default viewRest;"]},"metadata":{},"sourceType":"module"}