{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/messages.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup, Modal, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport { getUserOrder, sendMessage } from '../../actions/orderAction';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // import { getMainCourse } from './getMaincourse';\n\nexport class userOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpenModal = e => {\n      const filteredData = this.state.userOrders.filter(each => each._id === e.target.value);\n      this.setState({\n        showModal: true,\n        chatData: filteredData[0].message,\n        orderId: e.target.value\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.handleInputChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.handleSendMessage = e => {\n      e.preventDefault();\n      console.log(this.state.message);\n      var today = new Date();\n      var current_date = today.getMonth() + 1 + \"/\" + today.getDate() + \"/\" + today.getFullYear();\n      var current_time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n      const data = {\n        orderId: this.state.orderId,\n        message: this.state.message,\n        firstName: localStorage.getItem(\"first_name\"),\n        date: current_date,\n        time: current_time,\n        owner: localStorage.getItem(\"first_name\")\n      };\n      console.log(data);\n      this.props.sendMessage(data); // axios.post(`${backendServer}/yelp/messages/initiate`, data)\n      // .then(response => {\n      //     if(response.status === 200) {\n      //         alert(\"Reply successfully sent\")\n      //     }\n      // })\n    };\n\n    this.state = {\n      userOrders: [],\n      tempUserOrders: [],\n      showModal: false,\n      orderId: '',\n      chatData: [],\n      message: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserOrder(); // axios.get(`${backendServer}/yelp/order/${localStorage.getItem(\"user_id\")}`)\n    // .then(res => {\n    //     this.setState({ userOrders: res.data, tempUserOrders: res.data });\n    // });\n  }\n\n  render() {\n    // const filteredData = this.state.userOrders.filter(each => each._id === this.state.orderId)\n    // console.log(filteredData[0]);\n    let renderChat;\n\n    if (this.state.chatData.length >= 1) {\n      renderChat = this.state.chatData.map(chat => {\n        if (chat.firstName) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              marginBottom: \"0px\",\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }\n          }, \" \", chat.message, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              marginBottom: \"0px\",\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }\n          }, \" \", chat.owner, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              float: \"right\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }\n          }, \" \", chat.date, \" \", chat.time, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            style: {\n              marginBottom: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }\n          }, \" \", chat.message, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            style: {\n              marginBottom: \"0px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }\n          }, \" \", chat.owner, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            class: \"text-muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }\n          }, \" \", chat.date, \" \", chat.time, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }\n          }));\n        }\n      });\n    }\n\n    let renderOrders;\n\n    if (this.state.tempUserOrders) {\n      renderOrders = this.state.tempUserOrders.map(order => {\n        console.log(order.message);\n\n        if (order.message.length >= 1) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"tbody\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              width: '30%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }\n          }, \"Order Id - \", order_id), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              width: '30%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }\n          }, order.messages[length - 1].message.substring(0, 30)), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              width: '20%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }\n          }, order.messages[length - 1].timestamp), /*#__PURE__*/React.createElement(\"td\", {\n            style: {\n              width: '20%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }\n          }, owner.messages[length - 1].owner), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            href: \"#\",\n            class: \"btn btn-primary btn-sm ml-2\",\n            value: order._id,\n            onClick: this.handleOpenModal,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }\n          }, \"Chat\"), /*#__PURE__*/React.createElement(Modal, {\n            show: this.state.handleOpenModal,\n            onHide: this.handleCloseModal,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Modal.Header, {\n            closeButton: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Modal.Title, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }\n          }, \"Your conversation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Form, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }\n          }, renderChat, /*#__PURE__*/React.createElement(\"textarea\", {\n            name: \"chat\",\n            onChange: this.changeHandler,\n            style: {\n              width: '100%'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 27\n            }\n          }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            variant: \"primary\",\n            onClick: this.handleSendMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }\n          }, \"Reply\")))))), \");\");\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, \" All messages \")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      width: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, \"Order Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, \"Recent Chat\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, \"Timestamp\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }))), renderOrders))));\n  }\n\n} // export default userOrders;\n\nuserOrders.propTypes = {\n  getUserOrder: PropTypes.func.isRequired,\n  sendMessage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  status: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.orders.user,\n    status: state.orders.status\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUserOrder,\n  sendMessage\n})(userOrders);","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/user/messages.js"],"names":["React","Component","Navigationbar","Link","Form","Button","Card","CardGroup","Modal","Table","axios","backendServer","ReactPaginate","getUserOrder","sendMessage","PropTypes","connect","userOrders","constructor","props","handleOpenModal","e","filteredData","state","filter","each","_id","target","value","setState","showModal","chatData","message","orderId","handleCloseModal","handleInputChange","console","log","handleSendMessage","preventDefault","today","Date","current_date","getMonth","getDate","getFullYear","current_time","getHours","getMinutes","getSeconds","data","firstName","localStorage","getItem","date","time","owner","tempUserOrders","componentDidMount","render","renderChat","length","map","chat","marginBottom","float","renderOrders","order","width","order_id","messages","substring","timestamp","changeHandler","margin","color","propTypes","func","isRequired","user","object","status","mapStateToProps","orders"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup, Modal, Table} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\nimport ReactPaginate from 'react-paginate';\nimport '../restaurant/pagination.css';\nimport {getUserOrder, sendMessage} from '../../actions/orderAction';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { getMainCourse } from './getMaincourse';\n\nexport class userOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userOrders: [],\n            tempUserOrders: [], \n            showModal: false,\n            orderId: '',\n            chatData: [],\n            message: ''\n        };\n    }\n\n\n    componentDidMount() {\n        this.props.getUserOrder();\n\n        // axios.get(`${backendServer}/yelp/order/${localStorage.getItem(\"user_id\")}`)\n        // .then(res => {\n        //     this.setState({ userOrders: res.data, tempUserOrders: res.data });\n        // });\n    }\n\n    handleOpenModal = (e) => {\n        const filteredData = this.state.userOrders.filter(each => each._id === e.target.value)\n        this.setState({ showModal: true, chatData: filteredData[0].message, orderId: e.target.value});\n        \n      }\n\n      handleCloseModal = () => {\n        this.setState({ showModal: false });\n      }\n\n      handleInputChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            message: e.target.value\n        })\n    }\n\n      handleSendMessage = (e) => {\n        e.preventDefault();\n        console.log(this.state.message)\n        var today = new Date();\n        var current_date = ((today.getMonth()+1)+\"/\"+today.getDate()+\"/\"+today.getFullYear());\n        var current_time = (today.getHours() + \":\"+today.getMinutes()+\":\"+today.getSeconds());\n        const data = {\n            orderId: this.state.orderId,\n            message: this.state.message,\n            firstName: localStorage.getItem(\"first_name\"),\n            date: current_date,\n            time: current_time,\n            owner: localStorage.getItem(\"first_name\")\n        }\n        console.log(data);\n        this.props.sendMessage(data)\n        // axios.post(`${backendServer}/yelp/messages/initiate`, data)\n        // .then(response => {\n        //     if(response.status === 200) {\n        //         alert(\"Reply successfully sent\")\n        //     }\n        // })\n    }\n    \n\n    render () {\n        // const filteredData = this.state.userOrders.filter(each => each._id === this.state.orderId)\n        // console.log(filteredData[0]);\n        let renderChat;\n        if(this.state.chatData.length >= 1) {\n            renderChat = this.state.chatData.map(chat => {\n                if(chat.firstName) {\n                return (\n                    <div>\n                        <p style={{marginBottom:\"0px\", float:\"right\"}}> {chat.message} </p>\n                        <br />\n                        <p class=\"text-muted\" style={{marginBottom:\"0px\", float:\"right\"}}> {chat.owner} </p>\n                        <br />\n                        <p class=\"text-muted\" style={{float:\"right\"}}> {chat.date} {chat.time} </p>\n                        <br />\n                        <br />\n                        <br />\n                    </div>\n                )\n                } else {\n                    return (\n                        <div>\n                            <p style={{marginBottom:\"0px\"}}> {chat.message} </p>\n                            <p class=\"text-muted\" style={{marginBottom:\"0px\"}}> {chat.owner} </p>\n                            <p class=\"text-muted\"> {chat.date} {chat.time} </p>\n                            <br />\n                        </div>\n                    )\n                }\n            })\n        }\n\n        let renderOrders;\n        if(this.state.tempUserOrders) {\n            renderOrders = this.state.tempUserOrders.map(order => {\n                console.log(order.message)\n                if(order.message.length >= 1) {\n                return (\n                <div>\n                    <tbody>\n                        <tr>\n                        <td style={{ width: '30%' }}>\n                        Order Id - {order_id}\n                        </td>\n                        <td style={{ width: '30%' }}>\n                            {order.messages[length - 1].message.substring(0, 30)}\n                        </td>\n                        <td style={{ width: '20%' }}>\n                            {order.messages[length - 1].timestamp}\n                        </td>\n                        <td style={{ width: '20%' }}>\n                                {owner.messages[length - 1].owner}\n                        </td>\n                        <td>\n                        <button\n                             href='#'\n                            class='btn btn-primary btn-sm ml-2'\n                            value={order._id}\n                            onClick={this.handleOpenModal}>\n                            Chat\n                        </button>\n                        <Modal\n                        show={this.state.handleOpenModal}\n                        onHide={this.handleCloseModal}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Your conversation</Modal.Title>\n                        </Modal.Header>\n\n                      <Modal.Body>\n                        <Form>\n                          {renderChat}\n                          <textarea\n                            name='chat'\n                            onChange={this.changeHandler}\n                            style={{ width: '100%' }}></textarea>\n                        </Form>\n                      </Modal.Body>\n\n                      <Modal.Footer>\n                        <Button\n                          variant='primary'\n                          onClick={this.handleSendMessage}>\n                          Reply\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                  </td>\n                </tr>\n              </tbody>\n            );\n                        {/* <p> <b>Order Id</b>: {order._id} </p>\n                        <p> <b>Restaurant Name </b>: {order.restName} </p>\n                        <p> <b>Dish name </b>: {order.dishName} </p>\n                        <Button value={order._id} style={{backgroundColor: \"red\", color: \"white\", border: \"1px solid red\"}} onClick={this.handleOpenModal}> Chat </Button>\n                        <Modal show={this.state.showModal} onHide={this.handleCloseModal}>\n                        <Modal.Header closeButton>\n                            <Modal.Title style={{fontSize: \"30px\"}}> Your conversation </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                {renderChat}\n                            <input class=\"form-control input-md\" type='text' style={{ height: '70px'}} onChange={this.handleInputChange}/>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button style={{border: \"1px solid red\", backgroundColor: \"red\", color: 'white',  width: \"100px\", borderRadius: '5px'}} onClick = {this.handleSendMessage}>Reply</Button>\n                            </Modal.Footer>\n                        </Modal>\n                        <hr />\n                        <br/>\n                        <br/> */}\n                    </div>\n                )\n            }\n        })\n    }\n        \n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                <div >\n                    <center>\n                    <h1 style={{margin: \"10px\", color:\"red\"}}> All messages </h1>\n                    </center>\n                    <hr />\n                    <Table striped bordered hover width='200'>\n                        <thead>\n                            <tr>\n                                <th>Order Id</th>\n                                <th>Recent Chat</th>\n                                <th>Timestamp</th>\n                                <th>Username</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                    {renderOrders}\n          </Table>\n                </div>         \n                </div>\n                \n            </React.Fragment>\n        )\n    }\n         \n}\n// export default userOrders;\nuserOrders.propTypes = {\n    getUserOrder: PropTypes.func.isRequired,\n    sendMessage: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    status: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => { \n    return ({\n    user: state.orders.user,\n    status: state.orders.status\n})};\n\nexport default connect(mapStateToProps, { getUserOrder, sendMessage })(userOrders);\n\n\n\n"]},"metadata":{},"sourceType":"module"}