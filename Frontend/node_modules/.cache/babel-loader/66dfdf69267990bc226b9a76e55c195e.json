{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getSalad.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport ReactPaginate from 'react-paginate';\nexport class getSalad extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.state = {\n      saladList: [],\n      offset: 0,\n      perPage: 5,\n      currentPage: 0,\n      pageCount: null\n    };\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(`${backendServer}/yelp/viewMenu/salad/${localStorage.getItem(\"rest_id\")}`).then(res => {\n      console.log(res.data);\n      this.setState({\n        saladList: res.data\n      }); //console.log(this.state.appetizerList);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state,\n      saladList: !nextProps.saladList ? this.state.saladList : nextProps.saladList,\n      pageCount: Math.ceil(this.state.saladList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    const count = this.state.saladList.length;\n    let fileName;\n    let imgSrc;\n    const slice = this.state.saladList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.saladList.length / this.state.perPage) > 1 ? Math.ceil(this.state.saladList.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    });\n    let renderSalad;\n\n    if (this.state.saladList) {\n      renderSalad = this.state.saladList.map(menu => {\n        var fileName = menu.fileText;\n        var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            borderLeft: \"none\",\n            borderBottom: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Img, {\n          src: imgSrc,\n          style: {\n            width: \"500px\",\n            height: \"420px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Card.Title, {\n          style: {\n            margin: \"10px\",\n            fontSize: \"25px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }, menu.dish_name, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }\n        }, menu.ingredients), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, menu.description), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        }, \" $\", menu.price), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            backgroundColor: \"red\",\n            border: \"1px solid red\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`\n          },\n          style: {\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 111\n          }\n        }, \" Edit dish \")))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, paginationElement, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \" Salads \")), renderSalad)));\n  }\n\n}\nexport default getSalad;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getSalad.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","ReactPaginate","getSalad","constructor","props","handlePageClick","e","alert","selectedPage","selected","offset","state","perPage","setState","currentPage","saladList","pageCount","bind","componentDidMount","get","localStorage","getItem","then","res","console","log","data","componentWillReceiveProps","nextProps","Math","ceil","length","render","count","fileName","imgSrc","slice","paginationElement","renderSalad","map","menu","fileText","borderLeft","borderBottom","width","height","margin","fontSize","dish_name","ingredients","description","price","backgroundColor","border","marginLeft","pathname","dish_id","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport ReactPaginate from 'react-paginate';\n\nexport class getSalad extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saladList: [],\n            offset: 0,\n            perPage: 5,\n            currentPage: 0,\n            pageCount: null\n        };\n        this.handlePageClick = this.handlePageClick.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`${backendServer}/yelp/viewMenu/salad/${localStorage.getItem(\"rest_id\")}`)\n        .then(res => {\n            console.log(res.data)\n            this.setState({ saladList: res.data });\n            //console.log(this.state.appetizerList);\n        });\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n\n    };\n\n\n\n    componentWillReceiveProps(nextProps){\n        this.setState({\n          ...this.state,\n          saladList : !nextProps.saladList ? this.state.saladList : nextProps.saladList,\n          pageCount: Math.ceil(this.state.saladList.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n\n    render () {\n        const count = this.state.saladList.length;\n        let fileName;\n        let imgSrc;\n        const slice = this.state.saladList.slice(this.state.offset, this.state.offset + this.state.perPage);\n\n          let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.saladList.length / this.state.perPage) > 1 ? Math.ceil(this.state.saladList.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n        let renderSalad;\n        if(this.state.saladList){\n        renderSalad = this.state.saladList.map(menu => {\n            var fileName = menu.fileText\n            var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`\n            return (\n                <div>\n                    <Card style={{borderLeft: \"none\", borderBottom: \"none\"}}>\n                        <Card.Img src = {imgSrc} style={{width: \"500px\", height: \"420px\"}}></Card.Img>\n                        <Card.Title style={{margin: \"10px\", fontSize: \"25px\"}}>{menu.dish_name} </Card.Title>\n                        <Card.Text style={{margin: \"10px\"}}>{menu.ingredients}</Card.Text>\n                        <Card.Text style={{margin: \"10px\"}}>{menu.description}</Card.Text>\n                        <Card.Text style={{margin: \"10px\"}}> ${menu.price}</Card.Text>\n                        <div>\n                        <Button style={{backgroundColor:\"red\", border: \"1px solid red\", marginLeft: \"10px\"}}> <Link to = {{pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`}} style={{color: \"white\"}}> Edit dish </Link>\n                        </Button>\n                        </div>\n                    </Card>\n                    <br/>\n                    <br/>\n                </div>\n            )\n        })\n        }\n        return (\n            <React.Fragment>\n            <Navigationbar/>\n            <div class='panel'>\n                {paginationElement}\n                <div class=\"container\">\n                    <center>\n                        <h1 style={{margin: \"10px\"}}> Salads </h1>\n                    </center>\n                        {renderSalad}\n                </div>\n            </div>\n        </React.Fragment>\n        )\n    }\n         \n}\nexport default getSalad;"]},"metadata":{},"sourceType":"module"}