{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getAppetizer.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport { getappetizer } from '../../../actions/menuAction';\nimport ReactPaginate from 'react-paginate';\nimport '../pagination.css';\nexport class getAppetizer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = e => {\n      alert(\"inside handle\");\n      const selectedPage = e.selected;\n      const offset = selectedPage * this.state.perPage;\n      this.setState({\n        currentPage: selectedPage,\n        offset: offset\n      });\n    };\n\n    this.state = {\n      appetizerList: [],\n      offset: 0,\n      perPage: 2,\n      currentPage: 0,\n      pageCount: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getappetizer();\n    console.log(this.props); // this.setState({appetizerList: this.props.user});\n    // this.forceUpdate();\n    // console.log(this.props);\n    // axios.get(`${backendServer}/yelp/viewMenu/appetizer/${localStorage.getItem(\"rest_id\")}`)\n    // .then(res => {\n    //     console.log(res.data)\n    //     \n    //     //console.log(this.state.appetizerList);\n    // });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    this.setState({ ...this.state,\n      beverageList: !nextProps.user ? this.state.appetizerList : nextProps.user,\n      pageCount: Math.ceil(this.state.appetizerList.length / this.state.perPage)\n    });\n  }\n\n  render() {\n    console.log(this.props.user);\n    console.log(this.state.appetizerList);\n    const count = this.state.appetizerList.length;\n    const slice = this.state.appetizerList.slice(this.state.offset, this.state.offset + this.state.perPage);\n    let paginationElement = /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"← Previous\",\n      nextLabel: \"Next →\",\n      breakLabel: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"gap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }\n      }, \"...\"),\n      pageCount: Math.ceil(this.state.appetizerList.length / this.state.perPage) > 0 ? Math.ceil(this.state.appetizerList.length / this.state.perPage) : 10,\n      onPageChange: this.handlePageClick,\n      forcePage: this.state.currentPage,\n      containerClassName: \"pagination\",\n      previousLinkClassName: \"previous_page\",\n      nextLinkClassName: \"next_page\",\n      disabledClassName: \"disabled\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n    let renderAppetizer;\n\n    if (this.state.appetizerList) {\n      renderAppetizer = slice.map(menu => {\n        var fileName = menu.fileText;\n        var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          style: {\n            borderLeft: \"none\",\n            borderBottom: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Card.Img, {\n          src: imgSrc,\n          style: {\n            width: \"500px\",\n            height: \"420px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Card.Title, {\n          style: {\n            margin: \"10px\",\n            fontSize: \"25px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }\n        }, menu.dishName, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }\n        }, menu.ingredients), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }, menu.description), /*#__PURE__*/React.createElement(Card.Text, {\n          style: {\n            margin: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        }, \" $\", menu.price), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: {\n            backgroundColor: \"red\",\n            border: \"1px solid red\",\n            marginLeft: \"10px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: {\n            pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`\n          },\n          style: {\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        }, \" Edit dish \")))), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }));\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\",\n        color: \"red\",\n        fontSize: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \" Appetizers \")), renderAppetizer, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, paginationElement)));\n  }\n\n}\ngetAppetizer.propTypes = {\n  getappetizer: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.getMenu.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getappetizer\n})(getAppetizer); //export default getAppetizer;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-master/Frontend/src/components/restaurant/Menu/getAppetizer.js"],"names":["React","Component","Navigationbar","PropTypes","Redirect","Link","connect","Form","Button","Card","CardGroup","axios","backendServer","getappetizer","ReactPaginate","getAppetizer","constructor","props","handlePageClick","e","alert","selectedPage","selected","offset","state","perPage","setState","currentPage","appetizerList","pageCount","componentDidMount","console","log","componentWillReceiveProps","nextProps","beverageList","user","Math","ceil","length","render","count","slice","paginationElement","renderAppetizer","map","menu","fileName","fileText","imgSrc","borderLeft","borderBottom","width","height","margin","fontSize","dishName","ingredients","description","price","backgroundColor","border","marginLeft","pathname","localStorage","getItem","dish_id","color","propTypes","func","isRequired","object","mapStateToProps","getMenu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AACA,OAAO,+CAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,SAA7B,QAA6C,iBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAO,mBAAP;AAEA,OAAO,MAAMC,YAAN,SAA2Bd,SAA3B,CAAqC;AACxCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyBnBC,eAzBmB,GAyBDC,CAAC,IAAI;AACnBC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA,YAAMC,YAAY,GAAGF,CAAC,CAACG,QAAvB;AACA,YAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKG,KAAL,CAAWC,OAAzC;AAEA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEN,YADH;AAEVE,QAAAA,MAAM,EAAEA;AAFE,OAAd;AAKH,KAnCkB;;AAEf,SAAKC,KAAL,GAAa;AACTI,MAAAA,aAAa,EAAE,EADN;AAETL,MAAAA,MAAM,EAAE,CAFC;AAGTE,MAAAA,OAAO,EAAE,CAHA;AAITE,MAAAA,WAAW,EAAE,CAJJ;AAKTE,MAAAA,SAAS,EAAE;AALF,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,KAAL,CAAWJ,YAAX;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB,EAFgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAcDgB,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,SAAKR,QAAL,CAAc,EACZ,GAAG,KAAKF,KADI;AAEZW,MAAAA,YAAY,EAAG,CAACD,SAAS,CAACE,IAAX,GAAkB,KAAKZ,KAAL,CAAWI,aAA7B,GAA6CM,SAAS,CAACE,IAF1D;AAGZP,MAAAA,SAAS,EAAEQ,IAAI,CAACC,IAAL,CAAU,KAAKd,KAAL,CAAWI,aAAX,CAAyBW,MAAzB,GAAkC,KAAKf,KAAL,CAAWC,OAAvD;AAHC,KAAd;AAMD;;AAGHe,EAAAA,MAAM,GAAI;AACNT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWmB,IAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,aAAvB;AAEA,UAAMa,KAAK,GAAG,KAAKjB,KAAL,CAAWI,aAAX,CAAyBW,MAAvC;AACA,UAAMG,KAAK,GAAG,KAAKlB,KAAL,CAAWI,aAAX,CAAyBc,KAAzB,CAA+B,KAAKlB,KAAL,CAAWD,MAA1C,EAAkD,KAAKC,KAAL,CAAWD,MAAX,GAAoB,KAAKC,KAAL,CAAWC,OAAjF,CAAd;AAGA,QAAIkB,iBAAiB,gBACjB,oBAAC,aAAD;AACE,MAAA,aAAa,EAAE,YADjB;AAEE,MAAA,SAAS,EAAE,QAFb;AAGE,MAAA,UAAU,eAAE;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHd;AAIE,MAAA,SAAS,EAAEN,IAAI,CAACC,IAAL,CAAU,KAAKd,KAAL,CAAWI,aAAX,CAAyBW,MAAzB,GAAkC,KAAKf,KAAL,CAAWC,OAAvD,IAAkE,CAAlE,GAAsEY,IAAI,CAACC,IAAL,CAAU,KAAKd,KAAL,CAAWI,aAAX,CAAyBW,MAAzB,GAAkC,KAAKf,KAAL,CAAWC,OAAvD,CAAtE,GAAwI,EAJrJ;AAKE,MAAA,YAAY,EAAE,KAAKP,eALrB;AAME,MAAA,SAAS,EAAE,KAAKM,KAAL,CAAWG,WANxB;AAOE,MAAA,kBAAkB,EAAE,YAPtB;AAQE,MAAA,qBAAqB,EAAE,eARzB;AASE,MAAA,iBAAiB,EAAE,WATrB;AAUE,MAAA,iBAAiB,EAAE,UAVrB;AAWE,MAAA,eAAe,EAAE,QAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAeA,QAAIiB,eAAJ;;AACA,QAAI,KAAKpB,KAAL,CAAWI,aAAf,EAA6B;AACzBgB,MAAAA,eAAe,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AAChC,YAAIC,QAAQ,GAAGD,IAAI,CAACE,QAApB;AACA,YAAIC,MAAM,GAAI,GAAErC,aAAc,2BAA0BmC,QAAS,EAAjE;AACA,4BACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACG,YAAAA,UAAU,EAAE,MAAb;AAAqBC,YAAAA,YAAY,EAAE;AAAnC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,UAAA,GAAG,EAAIF,MAAjB;AAAyB,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE,OAAR;AAAiBC,YAAAA,MAAM,EAAE;AAAzB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwDT,IAAI,CAACU,QAA7D,MAFJ,eAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAACF,YAAAA,MAAM,EAAE;AAAT,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCR,IAAI,CAACW,WAA1C,CAHJ,eAII,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAACH,YAAAA,MAAM,EAAE;AAAT,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCR,IAAI,CAACY,WAA1C,CAJJ,eAKI,oBAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAE;AAACJ,YAAAA,MAAM,EAAE;AAAT,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuCR,IAAI,CAACa,KAA5C,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAC,KAAjB;AAAwBC,YAAAA,MAAM,EAAE,eAAhC;AAAiDC,YAAAA,UAAU,EAAE;AAA7D,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAI;AAACC,YAAAA,QAAQ,EAAG,aAAYC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,IAAGnB,IAAI,CAACoB,OAAQ;AAAxE,WAAZ;AAAwF,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CADA,CANJ,CADA,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZA,eAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbA,CADR;AAiBH,OApBiB,CAAlB;AAqBH;;AACD,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,KAAK,EAAE;AAACb,QAAAA,MAAM,EAAE,MAAT;AAAiBa,QAAAA,KAAK,EAAE,KAAxB;AAA+BZ,QAAAA,QAAQ,EAAE;AAAzC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CADJ,EAISX,eAJT,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHD,iBADG,CALR,CAFJ,CADJ;AAeH;;AA/GuC;AAoH5C5B,YAAY,CAACqD,SAAb,GAAyB;AACrBvD,EAAAA,YAAY,EAAEV,SAAS,CAACkE,IAAV,CAAeC,UADR;AAErBlC,EAAAA,IAAI,EAAEjC,SAAS,CAACoE,MAAV,CAAiBD;AAFF,CAAzB;;AAKE,MAAME,eAAe,GAAGhD,KAAK,IAAI;AAC/B,SAAQ;AACRY,IAAAA,IAAI,EAAEZ,KAAK,CAACiD,OAAN,CAAcrC;AADZ,GAAR;AAGH,CAJC;;AAMF,eAAe9B,OAAO,CAACkE,eAAD,EAAkB;AAAE3D,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,YAA3C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../../backendServer\";\nimport { getappetizer } from '../../../actions/menuAction';\nimport ReactPaginate from 'react-paginate';\nimport '../pagination.css';\n\nexport class getAppetizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            appetizerList: [],\n            offset: 0,\n            perPage: 2,\n            currentPage: 0,\n            pageCount: null\n        };\n    }\n\n    componentDidMount() {\n        this.props.getappetizer();\n        console.log(this.props);\n        // this.setState({appetizerList: this.props.user});\n        // this.forceUpdate();\n        // console.log(this.props);\n        // axios.get(`${backendServer}/yelp/viewMenu/appetizer/${localStorage.getItem(\"rest_id\")}`)\n        // .then(res => {\n        //     console.log(res.data)\n        //     \n        //     //console.log(this.state.appetizerList);\n        // });\n    }\n\n    handlePageClick = e => {\n        alert(\"inside handle\");\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }\n        );\n    };\n\n    componentWillReceiveProps(nextProps){\n        console.log(nextProps)\n        this.setState({\n          ...this.state,\n          beverageList : !nextProps.user ? this.state.appetizerList : nextProps.user,\n          pageCount: Math.ceil(this.state.appetizerList.length / this.state.perPage)  \n        }\n       );\t\n      }\n\n\n    render () {\n        console.log(this.props.user)\n        console.log(this.state.appetizerList);\n\n        const count = this.state.appetizerList.length;\n        const slice = this.state.appetizerList.slice(this.state.offset, this.state.offset + this.state.perPage);\n        \n\n        let paginationElement = (\n            <ReactPaginate\n              previousLabel={\"← Previous\"}\n              nextLabel={\"Next →\"}\n              breakLabel={<span className=\"gap\">...</span>}\n              pageCount={Math.ceil(this.state.appetizerList.length / this.state.perPage) > 0 ? Math.ceil(this.state.appetizerList.length / this.state.perPage) : 10}\n              onPageChange={this.handlePageClick}\n              forcePage={this.state.currentPage}\n              containerClassName={\"pagination\"}\n              previousLinkClassName={\"previous_page\"}\n              nextLinkClassName={\"next_page\"}\n              disabledClassName={\"disabled\"}\n              activeClassName={\"active\"}\n            />\n          );\n        let renderAppetizer;\n        if (this.state.appetizerList){\n            renderAppetizer = slice.map(menu => {\n                var fileName = menu.fileText\n                var imgSrc = `${backendServer}/yelp/upload/restaurant/${fileName}`\n                return (\n                        <div>\n                        <Card style={{borderLeft: \"none\", borderBottom: \"none\"}}>\n                            <Card.Img src = {imgSrc} style={{width: \"500px\", height: \"420px\"}}></Card.Img>\n                            <Card.Title style={{margin: \"10px\", fontSize: \"25px\"}}>{menu.dishName} </Card.Title>\n                            <Card.Text style={{margin: \"10px\"}}>{menu.ingredients}</Card.Text>\n                            <Card.Text style={{margin: \"10px\"}}>{menu.description}</Card.Text>\n                            <Card.Text style={{margin: \"10px\"}}> ${menu.price}</Card.Text>\n                            <div>\n                            <Button style={{backgroundColor:\"red\", border: \"1px solid red\", marginLeft: \"10px\"}}>\n                            <Link to = {{pathname: `/editDish/${localStorage.getItem(\"rest_id\")}/${menu.dish_id}`}} style={{color: \"white\"}}> Edit dish </Link></Button>\n                            </div>\n                        </Card>\n                        <br/>\n                        <br />\n                        </div>\n                )\n            })\n        }\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                    <center>\n                    <h1 style={{margin: \"10px\", color: \"red\", fontSize: \"40px\"}}> Appetizers </h1>\n                    </center>\n                        {renderAppetizer}\n                        <center>\n                    {paginationElement}\n                    </center>\n                </div>\n            </React.Fragment>\n            \n        )\n    }\n         \n}\n\n\ngetAppetizer.propTypes = {\n    getappetizer: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = state => {\n    return ({\n    user: state.getMenu.user\n  })\n};\n\nexport default connect(mapStateToProps, { getappetizer })(getAppetizer);\n//export default getAppetizer;"]},"metadata":{},"sourceType":"module"}